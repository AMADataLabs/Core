# Repository Settings
DATALABS_PYTHONPATH='{{pythonpath}}'

# Project Settings
PROJECT_NAME='OneView'

TASK_CLASS=datalabs.etl.task.ETLTask
TASK_WRAPPER_CLASS=datalabs.etl.awslambda.ETLTaskWrapper

# Extractor
EXTRACTOR__TASK_CLASS=datalabs.etl.sql.sqlalchemy.extract.SQLAlchemyExtractorTask
EXTRACTOR__DATABASE_BACKEND=mssql+pymssql
EXTRACTOR__DATABASE_HOST=rdbt5302.ad.ama-assn.org
EXTRACTOR__DATABASE_PORT='1433'
EXTRACTOR__DATABASE_NAME='LicenseMaestro_CPT'
EXTRACTOR__DATABASE_USERNAME=dlabs_read
EXTRACTOR__DATABASE_PASSWORD='{{vistex_db_password}}'
EXTRACTOR__SQL="
SELECT DISTINCT LICENSEE AS Organization FROM (
    SELECT DISTINCT
        T3.ID                       AS  CONTRACTID,
        LTRIM(RTRIM(T3.licensee))   AS  LICENSEE,
    CASE
        WHEN T3.description like '%Dist%'
            THEN 'CPT Distribution License Agreement'
        WHEN T3.description like '%Internal%'
            THEN 'Internal Use License Agreement'
        WHEN T3.description in ( '<50001 CL Health Plans', 'Pilot Test Agreement of CPT in a Coordinated Care Organization', 'Standalone Settlement Agreement')
            THEN 'Internal Use License Agreement'
        ELSE T3.description
    END                         AS Contract_TYPE,
    T3.contract_status          AS  CONTRACT_STATUS,
    T3.expiration_date          AS  EXPIRATION_DATE,
    PROPERTY.description        AS  PROPERTY,
    PROPERTY.property_key       AS  PROPERTY_KEY,
    ARTICLE.description         AS  ARTICLE,
    ARTICLE.article_key         AS  ARTICLE_KEY,
    CHANNEL.Parent_description  AS PARENT_CHANNEL,
    CHANNEL.description         AS  CHANNEL,
    CHANNEL.channel_key         AS  CHANNEL_KEY
    FROM
        cm_model_incl T1
        join cm_model t2 on t1.model_key = t2.model_key
    JOIN V_CM_CONTRACTS T3 ON T2.contract_key = T3.contract_key
    JOIN (
        SELECT DISTINCT
            T1.model_key,
            T2.property_key
        from
            cm_model_incl T1
                LEFT JOIN (
                select
                    LEV.model_key as model_key,
                    LEV.property_key as PROPERTY_KEY
                from cm_model_incl LEV
                where LEV.property_key is not null
               ) T2
        ON T1.model_key = t2.model_key ) PROPS
        ON T1.model_key = PROPS.model_key

    LEFT JOIN
        v_ri_property Property
            ON Property.property_key = PROPS.property_key
    JOIN (
        SELECT DISTINCT
            T1.model_key,
            T2.ARTICLE_KEY
        from
            cm_model_incl T1
                LEFT JOIN (
                select
                    EXO.model_key as model_key,
                    EXO.article_key as ARTICLE_KEY
    from
        cm_model_incl EXO
    where
        EXO.article_key is not null
    ) T2 ON T1.model_key = t2.model_key
    ) ARTS ON T1.model_key = ARTS.model_key
    LEFT JOIN v_ri_article ARTICLE ON ARTICLE.article_key = ARTS.ARTICLE_KEY
    JOIN (
        SELECT
            DISTINCT T1.model_key,
            T2.CHANNEL_KEY
        from
            cm_model_incl T1
            LEFT JOIN (
                select
                    gen.model_key as model_key,
                    gen.channel_key as CHANNEL_KEY
                from
                    cm_model_incl gen
                where
                    channel_key is not null
            ) T2 ON T1.model_key = t2.model_key
    ) CHANS ON T1.model_key = CHANS.model_key
    LEFT JOIN v_ri_channel CHANNEL ON CHANNEL.channel_key = CHANS.CHANNEL_KEY
    WHERE
        T3.description NOT Like '%AFFINITY%'
        and T3.licensee <> '%ACME%'
        and T3.account_exec Not In ('David Young', 'Brian Eaggleston')
        AND T3.properties like '%CPT%'
) AS contract_rights
ORDER BY Organization ASC
OFFSET {index} ROWS
FETCH NEXT {count} ROWS ONLY;
"

EXTRACTOR__CHUNK_SIZE='100000'


# Pass-through Transformer
TRANSFORMER__TASK_CLASS=datalabs.etl.transform.PassThroughTransformerTask

# File Loader
LOADER__TASK_CLASS=datalabs.etl.fs.load.LocalFileLoaderTask
LOADER__BASE_PATH=./
LOADER__FILES=contract_rights_organizations.csv
