openapi: 3.0.3
info:
  title: CPT API
  description: CPT API Phase I
  version: "1.3.0"
  termsOfService: 'http://swagger.io/terms/'
  contact:
    email: datalabs@ama-assn.org
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: Descriptor
    description: >-
      CPT Code descriptor in short, medium, or long format. This corresponds to
      entries in the cpt.short_descriptor, cpt.medium_descriptor, and
      cpt.log_descriptor tables.
  - name: Consumer Descriptor
    description: >-
      Consumer-friendly CPT descriptor. This corresponds to entries in the
      cpt.consumer_descriptor table.
  - name: Clinician Descriptor
    description: >-
      Precise CPT descriptors for clinicians. This corresponds to entries in the
      cpt.clinician_descriptor table.
  - name: Modifier
    description: >-
      Appendix A-Modifiers
  - name: PLA
    description: >-
      Proprietary Laboratory Analysis Codes with long, medium, short
      descriptors. Includes various dates, code status, lab name, manufacturer
      name, and test name.
  - name: PDF
    description: Returns a time-limited URL to a zip archive of the standard CPT distribution PDFs
  - name: Releases
    description: >-
      All release data in descending order of date
    externalDocs:
      url: 'http://swagger.io'
paths:
  '/descriptor/{code}':
    get:
      tags:
        - Descriptor
      summary: CPT descriptor by CPT Code
      description: Returns all lengths of the descriptor for a particular CPT Code.
      operationId: getDescriptor
      parameters:
        - name: code
          in: path
          description: CPT Code
          required: true
          content:
            application/json:
              schema:
                type: string
        - name: length
          in: query
          description: 'Filter by description length. Any of "short", "medium", or "long".'
          required: false
          schema:
            type: array
            items:
              type: string
      x-amazon-apigateway-integration:
        uri: "arn:aws:apigateway:${region}:lambda:path/2015-03-31/functions/${lambda_descriptor_arn}/invocations"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        contentHandling: "CONVERT_TO_TEXT"
        type: "aws_proxy"
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Descriptor'
        '400':
          description: Invalid query parameter
        '404':
          description: No descriptor found for the given CPT Code.
      security:
        - cpt_auth:
            - 'read:cpt'
  /descriptors:
    get:
      tags:
        - Descriptor
      summary: All CPT descriptors
      description: 'Returns the CPT Code descriptor in short, medium, and long forms.'
      operationId: getDescriptors
      parameters:
        - name: length
          in: query
          description: 'Filter by description length. Any of "short", "medium", or "long".'
          required: false
          schema:
            type: array
            items:
              type: string
        - name: keyword
          in: query
          description: Filter by keyword across the text of any of the descriptor lengths.
          required: false
          schema:
            type: array
            items:
              type: string
        - name: since
          in: query
          description: >-
            Filters new codes since a date ("YYYY-MM-DD").
          required: false
          schema:
            type: array
            items:
              type: string
      x-amazon-apigateway-integration:
        uri: "arn:aws:apigateway:${region}:lambda:path/2015-03-31/functions/${lambda_descriptors_arn}/invocations"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        contentHandling: "CONVERT_TO_TEXT"
        type: "aws_proxy"
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Descriptor'
        '400':
          description: Invalid query parameter
      security:
        - cpt_auth:
            - 'read:cpt'
  '/consumer/descriptor/{code}':
    get:
      tags:
        - Consumer Descriptor
      summary: Consumer-friendly descriptor by CPT Code
      description: Returns the Consumer-friendly CPT descriptor by CPT Code.
      operationId: getConsumerDescriptor
      parameters:
        - name: code
          in: path
          description: CPT Code
          required: true
          schema:
            type: string
      x-amazon-apigateway-integration:
        uri: "arn:aws:apigateway:${region}:lambda:path/2015-03-31/functions/${lambda_consumer_descriptor_arn}/invocations"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        contentHandling: "CONVERT_TO_TEXT"
        type: "aws_proxy"
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConsumerDescriptor'
        '400':
          description: Invalid query parameter
        '404':
          description: No Consumer Descriptor found for the given CPT code.
      security:
        - cpt_auth:
            - 'read:descriptors'
  /consumer/descriptors:
    get:
      tags:
        - Consumer Descriptor
      summary: All consumer-friendly descriptors
      description: Returns all Consumer-friendly CPT descriptors.
      operationId: getConsumerDescriptors
      parameters:
        - name: keyword
          in: query
          description: Filter by keyword in the descriptor text.
          required: false
          schema:
            type: array
            items:
              type: string
        - name: since
          in: query
          description: >-
            Filters new codes since a date ("YYYY-MM-DD").
          required: false
          schema:
            type: array
            items:
              type: string
      x-amazon-apigateway-integration:
        uri: "arn:aws:apigateway:${region}:lambda:path/2015-03-31/functions/${lambda_consumer_descriptors_arn}/invocations"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        contentHandling: "CONVERT_TO_TEXT"
        type: "aws_proxy"
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ConsumerDescriptor'
        '400':
          description: Invalid query parameter
      security:
        - cpt_auth:
            - 'read:descriptors'
  /clinician/descriptors:
    get:
      tags:
        - Clinician Descriptor
      summary: All clinician descriptors
      description: Returns all Clinician CPT descriptors.
      operationId: getClinicianDescriptors
      parameters:
        - name: keyword
          in: query
          description: Filter by keyword in the descriptor text.
          required: false
          schema:
            type: array
            items:
              type: string
        - name: since
          in: query
          description: >-
            Filters new codes since a date ("YYYY-MM-DD").
          required: false
          schema:
            type: array
            items:
              type: string
      x-amazon-apigateway-integration:
        uri: "arn:aws:apigateway:${region}:lambda:path/2015-03-31/functions/${lambda_all_clinician_descriptors_arn}/invocations"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        contentHandling: "CONVERT_TO_TEXT"
        type: "aws_proxy"
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClinicianDescriptor'
        '400':
          description: Invalid query parameter
      security:
        - cpt_auth:
            - 'read:descriptors'
  '/clinician/descriptors/{code}':
    get:
      tags:
        - Clinician Descriptor
      summary: All clinician descriptors by CPT Code
      description: Returns all Clinician CPT descriptors.
      operationId: getClinicianDescriptorsByCode
      parameters:
        - name: code
          in: path
          description: CPT Code
          required: true
          content:
            application/json:
              schema:
                type: string
      x-amazon-apigateway-integration:
        uri: "arn:aws:apigateway:${region}:lambda:path/2015-03-31/functions/${lambda_clinician_descriptors_arn}/invocations"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        contentHandling: "CONVERT_TO_TEXT"
        type: "aws_proxy"
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClinicianDescriptor'
        '400':
          description: Invalid query parameter
        '404':
          description: No Clinician Descriptors found for the given CPT code
      security:
        - cpt_auth:
            - 'read:descriptors'
  '/pla/details/{code}':
    get:
      tags:
        - PLA
      summary: PLA Code details
      description: Returns the details of a PLA Code.
      operationId: getPLADetails
      parameters:
        - name: code
          in: path
          description: PLA code
          required: true
          schema:
            type: string
        - name: length
          in: query
          description: 'Filter by "long", "medium", "short" descriptors'
          required: false
          schema:
            type: array
            items:
              type: string
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "200"
        requestTemplates:
          application/json: "{\"statusCode\": 200}"
        passthroughBehavior: "when_no_match"
        type: "mock"
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PLA'
        '400':
          description: Invalid query parameter
        '404':
          description: No PLA details found for the given PLA code
      security:
        - cpt_auth:
            - 'read:pla'
  /pla/details:
    get:
      tags:
        - PLA
      summary: All PLA Code details
      description: ALL PLA codes
      operationId: getAllPLADetails
      parameters:
        - name: length
          in: query
          description: 'Filter by "long", "medium", "short" descriptors'
          required: false
          schema:
            type: array
            items:
              type: string
        - name: keyword
          in: query
          description: >-
            Filter by keyword across the text of any of the descriptor lengths.
          required: false
          schema:
            type: array
            items:
              type: string
        - name: since
          in: query
          description: >-
            Filters new codes since a date ("YYYY-MM-DD")
            ("quarterly").
          required: false
          schema:
            type: array
            items:
              type: string
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "200"
        requestTemplates:
          application/json: "{\"statusCode\": 200}"
        passthroughBehavior: "when_no_match"
        type: "mock"
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PLA'
        '400':
          description: Invalid query parameter
      security:
        - cpt_auth:
            - 'read:pla'
  '/modifier/{code}':
    get:
      tags:
        - Modifier
      summary: Modifier code details
      description: Returns code details and type by specific code
      operationId: getModifierByCode
      parameters:
        - name: code
          in: path
          description: Modifier description by code.
          required: true
          content:
            application/json:
              schema:
                type: string
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "200"
        requestTemplates:
          application/json: "{\"statusCode\": 200}"
        passthroughBehavior: "when_no_match"
        type: "mock"
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Modifier'
        '404':
          description: No data exists for the given modifier.
      security:
        - cpt_auth:
            - 'read:modifier'
  /modifiers:
    get:
      tags:
        - Modifier
      summary: All Modifier codes and types
      description: Returns all modifier codes with their descriptors and types
      operationId: viewALLmodifiers
      parameters:
        - name: type
          in: query
          description: Filter by modifier type
          required: false
          schema:
            type: array
            items:
              type: string
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "200"
        requestTemplates:
          application/json: "{\"statusCode\": 200}"
        passthroughBehavior: "when_no_match"
        type: "mock"
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Modifier'
        '400':
          description: Invalid query parameter
      security:
        - cpt_auth:
            - 'read:modifier'
  /pdfs/{release}:
    get:
      tags:
        - PDF
      summary: Zip archive of the PDFs from the specified release
      description: Provides a time-limited URL to a zip archive of the PDFs from the specified release
      operationId: getPDFLinkForRelease
      parameters:
        - name: release
          in: path
          description: release in the form YYYY-['Y' | 'Q1' | 'Q2' | 'Q3' | 'Q4']
          required: true
          schema:
            type: string
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "200"
        requestTemplates:
          application/json: "{\"statusCode\": 200}"
        passthroughBehavior: "when_no_match"
        type: "mock"
      responses:
        '303':
          description: successful creation of a time-limited download URL
          headers:
            Location:
              schema:
                type: "string"
        '404':
          description: No PDFs found for the given release.
      security:
        - cpt_auth:
            - 'read:pdf'
  /pdfs:
    get:
      tags:
        - PDF
      summary: Zip archive of the most recent PDFs
      description: Provides a time-limited URL to a zip archive of the PDFs from the most recent release
      operationId: getPDFLink
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "200"
        requestTemplates:
          application/json: "{\"statusCode\": 200}"
        passthroughBehavior: "when_no_match"
        type: "mock"
      responses:
        '303':
          description: successful creation of a time-limited download URL
          headers:
            Location:
              schema:
                type: "string"
      security:
        - cpt_auth:
            - 'read:pdf'
  /releases:
    get:
      tags:
        - Releases
      summary: Release data in descending order of date
      description: Allows user to query for updates to expose release data in descending order of date
      operationId: getReleaseDate
      parameters:
        - name: results
          in: query
          description: Number of results to return
          required: false
          schema:
            type: integer
            minimum: 1
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "200"
        requestTemplates:
          application/json: "{\"statusCode\": 200}"
        passthroughBehavior: "when_no_match"
        type: "mock"
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Release'
        '400':
          description: Invalid query parameter
      security:
        - cpt_auth:
            - 'read:release'
  /{proxy+}:
    get:
      parameters:
        - name: proxy
          in: path
          required: true
          schema:
            type: string
      x-amazon-apigateway-integration:
        uri: "arn:aws:apigateway:${region}:lambda:path/2015-03-31/functions/${lambda_return404_arn}/invocations"
        responses:
          default:
            statusCode: 200
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        cacheNamespace: "www3v9"
        cacheKeyParameters:
          - "method.request.path.proxy"
        type: "aws_proxy"
      responses:
        '404':
          description: Invalid resource.
components:
  schemas:
    Descriptor:
      type: object
      required:
        - code
      properties:
        code:
          type: string
          format: byte
        short:
          type: string
          format: byte
        medium:
          type: string
          format: byte
        long:
          type: string
          format: byte
    ConsumerDescriptor:
      type: object
      required:
        - code
        - descriptor
      properties:
        code:
          type: string
          format: byte
        descriptor:
          type: string
          format: byte
    ClinicianDescriptor:
      type: object
      required:
        - id
        - code
        - descriptor
      properties:
        id:
          type: integer
          format: int64
        code:
          type: string
          format: byte
        descriptor:
          type: string
          format: byte
    PLA:
      type: object
      required:
        - code
        - short_descriptor
        - medium_descriptor
        - long_descriptor
        - effective_date
        - lab_name
        - manufacturer_name
        - publish_date
        - test_name
      properties:
        code:
          type: string
          format: byte
        long_descriptor:
          type: string
          format: byte
        medium_descriptor:
          type: string
          format: byte
        short_descriptor:
          type: string
          format: byte
        code_status:
          type: string
          format: byte
        effective_date:
          type: string
          format: byte
        lab_name:
          type: string
          format: byte
        manufacturer_name:
          type: string
          format: byte
        published_date:
          type: string
          format: byte
        test_name:
          type: string
          format: byte
    Modifier:
      type: object
      required:
        - code
        - descriptor
        - type
      properties:
        code:
          type: string
          format: byte
        description:
          type: string
          format: byte
        type:
          type: string
          format: byte
    Release:
      type: object
      required:
        - id
        - type
        - effective_date
        - publish_date
      properties:
        id:
          type: integer
          format: int64
        type:
          type: string
          format: byte
        effective_date:
          type: string
          format: byte
        publish_date:
          type: string
          format: byte
  securitySchemes:
    cpt_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: 'http://cptAPI.swagger.io/oauth/dialog'
          scopes:
            'read:cpt': read cpt table
            'read:descriptors': read clinical descriptor table
            'read:pla': read pla codes table
            'read:modifier' : read modifier table
            'read:pdf': read pdf url
            'read:release': read release date table
    api_key:
      type: apiKey
      name: api_key
      in: header
externalDocs:
  description: Find out more about Swagger
  url: 'http://swagger.io'
servers:
  - url: 'https://virtserver.swaggerhub.com/PeterGwinLane/CPT/1.3.0'
