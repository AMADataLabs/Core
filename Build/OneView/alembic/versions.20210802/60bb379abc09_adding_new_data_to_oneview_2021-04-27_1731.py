"""Adding new data to oneview

Revision ID: 60bb379abc09
Revises: 035d0e6ba6ac
Create Date: 2021-04-27 17:31:47.708060+00:00

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '60bb379abc09'
down_revision = '035d0e6ba6ac'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('area_code',
    sa.Column('area_code', sa.String(), nullable=False),
    sa.Column('prefix', sa.String(), nullable=False),
    sa.Column('latitude', sa.String(), nullable=False),
    sa.Column('longitude', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('area_code', name=op.f('pk_area_code')),
    schema='oneview'
    )
    op.create_table('census',
    sa.Column('zip_code', sa.String(), nullable=False),
    sa.Column('population', sa.Integer(), nullable=False),
    sa.Column('urban', sa.Integer(), nullable=False),
    sa.Column('suburban', sa.Integer(), nullable=False),
    sa.Column('farm', sa.Integer(), nullable=False),
    sa.Column('non_farm', sa.Integer(), nullable=False),
    sa.Column('white', sa.Integer(), nullable=False),
    sa.Column('black', sa.Integer(), nullable=False),
    sa.Column('indian', sa.Integer(), nullable=False),
    sa.Column('asian', sa.Integer(), nullable=False),
    sa.Column('hawaian', sa.Integer(), nullable=False),
    sa.Column('race_other', sa.Integer(), nullable=False),
    sa.Column('hispanic', sa.Integer(), nullable=False),
    sa.Column('age_0_to_4', sa.Integer(), nullable=False),
    sa.Column('age_5_to_9', sa.Integer(), nullable=False),
    sa.Column('age_10_to_14', sa.Integer(), nullable=False),
    sa.Column('age_15_to_17', sa.Integer(), nullable=False),
    sa.Column('age_18_to_19', sa.Integer(), nullable=False),
    sa.Column('age_20', sa.Integer(), nullable=False),
    sa.Column('age_21', sa.Integer(), nullable=False),
    sa.Column('age_22_to_24', sa.Integer(), nullable=False),
    sa.Column('age_25_to_29', sa.Integer(), nullable=False),
    sa.Column('age_30_to_34', sa.Integer(), nullable=False),
    sa.Column('age_35_to_39', sa.Integer(), nullable=False),
    sa.Column('age_40_to_44', sa.Integer(), nullable=False),
    sa.Column('age_45_to_49', sa.Integer(), nullable=False),
    sa.Column('age_50_to_54', sa.Integer(), nullable=False),
    sa.Column('age_55_to_59', sa.Integer(), nullable=False),
    sa.Column('age_60_to_61', sa.Integer(), nullable=False),
    sa.Column('age_65_to_66', sa.Integer(), nullable=False),
    sa.Column('age_67_to_69', sa.Integer(), nullable=False),
    sa.Column('age_70_to_74', sa.Integer(), nullable=False),
    sa.Column('age_75_to_79', sa.Integer(), nullable=False),
    sa.Column('age_80_to_84', sa.Integer(), nullable=False),
    sa.Column('age_85_plus', sa.Integer(), nullable=False),
    sa.Column('education_below_9', sa.Integer(), nullable=False),
    sa.Column('education_9_to_12', sa.Integer(), nullable=False),
    sa.Column('education_high_school', sa.Integer(), nullable=False),
    sa.Column('education_some_college', sa.Integer(), nullable=False),
    sa.Column('education_association', sa.Integer(), nullable=False),
    sa.Column('education_bachelor', sa.Integer(), nullable=False),
    sa.Column('education_professional', sa.Integer(), nullable=False),
    sa.Column('household_income', sa.Integer(), nullable=False),
    sa.Column('per_person_income', sa.Integer(), nullable=False),
    sa.Column('house_value', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('zip_code', name=op.f('pk_census')),
    schema='oneview'
    )
    op.create_table('core_based_statistical_area_zip_code',
    sa.Column('code', sa.String(), nullable=False),
    sa.Column('type', sa.String(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('level', sa.String(), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('code', name=op.f('pk_core_based_statistical_area_zip_code')),
    schema='oneview'
    )
    op.create_table('county',
    sa.Column('federal_information_processing_standard_code', sa.String(), nullable=False),
    sa.Column('county_name', sa.String(), nullable=False),
    sa.Column('state', sa.String(), nullable=False),
    sa.Column('time_zone', sa.String(), nullable=False),
    sa.Column('county_type', sa.String(), nullable=False),
    sa.Column('county_seat', sa.String(), nullable=False),
    sa.Column('name_type', sa.String(), nullable=False),
    sa.Column('elevation', sa.Integer(), nullable=False),
    sa.Column('person_per_household', sa.Integer(), nullable=False),
    sa.Column('population', sa.Integer(), nullable=False),
    sa.Column('area', sa.Integer(), nullable=False),
    sa.Column('households', sa.Integer(), nullable=False),
    sa.Column('white', sa.Integer(), nullable=False),
    sa.Column('black', sa.Integer(), nullable=False),
    sa.Column('hispanic', sa.Integer(), nullable=False),
    sa.Column('average_income', sa.String(), nullable=False),
    sa.Column('average_house', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('federal_information_processing_standard_code', name=op.f('pk_county')),
    schema='oneview'
    )
    op.create_table('historical_resident',
    sa.Column('medical_education_number', sa.String(), nullable=False),
    sa.Column('institution_code', sa.String(), nullable=False),
    sa.Column('specialty', sa.String(), nullable=False),
    sa.Column('training_type', sa.String(), nullable=False),
    sa.Column('start_year', sa.Integer(), nullable=False),
    sa.Column('end_year', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('medical_education_number', name=op.f('pk_historical_resident')),
    schema='oneview'
    )
    op.create_table('iqvia_update',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date', sa.Date(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_iqvia_update')),
    sa.UniqueConstraint('date', name=op.f('uq_iqvia_update_date')),
    schema='oneview'
    )
    op.create_table('metropolitan_statistical_area',
    sa.Column('code', sa.String(), nullable=False),
    sa.Column('type', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('consolidated_metropolitan_statistical_area', sa.String(), nullable=False),
    sa.Column('population', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('code', name=op.f('pk_metropolitan_statistical_area')),
    schema='oneview'
    )
    op.create_table('zip_code',
    sa.Column('zip_code', sa.String(), nullable=False),
    sa.Column('state', sa.String(), nullable=False),
    sa.Column('city', sa.String(), nullable=False),
    sa.Column('type', sa.String(), nullable=False),
    sa.Column('county_federal_information_processing', sa.String(), nullable=False),
    sa.Column('latitude', sa.String(), nullable=False),
    sa.Column('longitude', sa.String(), nullable=False),
    sa.Column('metropolitan_statistical_area', sa.String(), nullable=False),
    sa.Column('primary_metropolitan_statistical_area', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['county_federal_information_processing'], ['oneview.county.federal_information_processing_standard_code'], name=op.f('fk_zip_code_county_federal_information_processing_county')),
    sa.ForeignKeyConstraint(['metropolitan_statistical_area'], ['oneview.metropolitan_statistical_area.code'], name=op.f('fk_zip_code_metropolitan_statistical_area_metropolitan_statistical_area')),
    sa.PrimaryKeyConstraint('zip_code', name=op.f('pk_zip_code')),
    schema='oneview'
    )
    op.create_table('corporate_parent_business',
    sa.Column('child', sa.String(), nullable=False),
    sa.Column('parent', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['child'], ['oneview.business.id'], name=op.f('fk_corporate_parent_business_child_business')),
    sa.ForeignKeyConstraint(['parent'], ['oneview.business.id'], name=op.f('fk_corporate_parent_business_parent_business')),
    sa.PrimaryKeyConstraint('child', name=op.f('pk_corporate_parent_business')),
    schema='oneview'
    )
    op.create_table('subsidiary_business',
    sa.Column('subsidiary', sa.String(), nullable=False),
    sa.Column('owner', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['owner'], ['oneview.business.id'], name=op.f('fk_subsidiary_business_owner_business')),
    sa.ForeignKeyConstraint(['subsidiary'], ['oneview.business.id'], name=op.f('fk_subsidiary_business_subsidiary_business')),
    sa.PrimaryKeyConstraint('subsidiary', name=op.f('pk_subsidiary_business')),
    schema='oneview'
    )
    op.create_table('zip_code_core_based_statistical_areas',
    sa.Column('zip_code', sa.String(), nullable=False),
    sa.Column('core_based_statistical_area', sa.String(), nullable=False),
    sa.Column('division', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['core_based_statistical_area'], ['oneview.core_based_statistical_area_zip_code.code'], name=op.f('fk_zip_code_core_based_statistical_areas_core_based_statistical_area_core_based_statistical_area_zip_code')),
    sa.ForeignKeyConstraint(['zip_code'], ['oneview.zip_code.zip_code'], name=op.f('fk_zip_code_core_based_statistical_areas_zip_code_zip_code')),
    sa.PrimaryKeyConstraint('zip_code', name=op.f('pk_zip_code_core_based_statistical_areas')),
    schema='oneview'
    )
    op.add_column('business', sa.Column('batch_business_date', sa.Date(), nullable=True), schema='oneview')
    op.add_column('business', sa.Column('class_of_trade_classification', sa.String(), nullable=True), schema='oneview')
    op.add_column('business', sa.Column('class_of_trade_classification_description', sa.String(), nullable=True), schema='oneview')
    op.add_column('business', sa.Column('class_of_trade_facility_type', sa.String(), nullable=True), schema='oneview')
    op.add_column('business', sa.Column('class_of_trade_facility_type_description', sa.String(), nullable=True), schema='oneview')
    op.add_column('business', sa.Column('class_of_trade_specialty', sa.String(), nullable=True), schema='oneview')
    op.add_column('business', sa.Column('class_of_trade_specialty_description', sa.String(), nullable=True), schema='oneview')
    op.add_column('business', sa.Column('deactivation_reason', sa.String(), nullable=True), schema='oneview')
    op.add_column('business', sa.Column('electronic_medical_record', sa.String(), nullable=True), schema='oneview')
    op.add_column('business', sa.Column('electronically_prescribe', sa.String(), nullable=True), schema='oneview')
    op.add_column('business', sa.Column('federal_information_processing_standard_county', sa.String(), nullable=True), schema='oneview')
    op.add_column('business', sa.Column('federal_information_processing_standard_state', sa.String(), nullable=True), schema='oneview')
    op.add_column('business', sa.Column('hospital_care', sa.String(), nullable=True), schema='oneview')
    op.add_column('business', sa.Column('iqvia_address_id', sa.String(), nullable=True), schema='oneview')
    op.add_column('business', sa.Column('latitude', sa.String(), nullable=True), schema='oneview')
    op.add_column('business', sa.Column('longitude', sa.String(), nullable=True), schema='oneview')
    op.add_column('business', sa.Column('metropolitan_statistical_area', sa.String(), nullable=True), schema='oneview')
    op.add_column('business', sa.Column('number_of_providers', sa.String(), nullable=True), schema='oneview')
    op.add_column('business', sa.Column('pay_for_performance', sa.String(), nullable=True), schema='oneview')
    op.add_column('business', sa.Column('primary_class_of_trade', sa.String(), nullable=True), schema='oneview')
    op.add_column('business', sa.Column('record_type', sa.String(), nullable=True), schema='oneview')
    op.add_column('business', sa.Column('replacement_business', sa.String(), nullable=True), schema='oneview')
    op.add_column('business', sa.Column('status_indicator', sa.String(), nullable=True), schema='oneview')
    op.add_column('business', sa.Column('teaching_hospital', sa.String(), nullable=True), schema='oneview')
    op.add_column('business', sa.Column('total_census_beds', sa.String(), nullable=True), schema='oneview')
    op.add_column('business', sa.Column('total_licensed_beds', sa.String(), nullable=True), schema='oneview')
    op.add_column('business', sa.Column('total_staffed_beds', sa.String(), nullable=True), schema='oneview')
    op.create_foreign_key(op.f('fk_business_batch_business_date_iqvia_update'), 'business', 'iqvia_update', ['batch_business_date'], ['date'], source_schema='oneview', referent_schema='oneview')
    op.add_column('credentialing_customer', sa.Column('current_indicator', sa.String(), nullable=True), schema='oneview')
    op.drop_column('credentialing_customer', 'isell_username', schema='oneview')
    op.add_column('credentialing_order', sa.Column('person_id', sa.String(), nullable=False), schema='oneview')
    op.add_column('credentialing_order', sa.Column('unique_physician_identification_number', sa.String(), nullable=False), schema='oneview')
    op.add_column('physician_race_ethnicity', sa.Column('current_person_type', sa.String(), nullable=False), schema='oneview')
    op.add_column('physician_race_ethnicity', sa.Column('gender', sa.String(), nullable=False), schema='oneview')
    op.add_column('provider', sa.Column('batch_business_date', sa.Date(), nullable=True), schema='oneview')
    op.add_column('provider', sa.Column('national_provider_identifier', sa.String(), nullable=True), schema='oneview')
    op.add_column('provider', sa.Column('universal_provider_identification', sa.String(), nullable=True), schema='oneview')
    op.create_foreign_key(op.f('fk_provider_batch_business_date_iqvia_update'), 'provider', 'iqvia_update', ['batch_business_date'], ['date'], source_schema='oneview', referent_schema='oneview')
    op.add_column('provider_affiliation', sa.Column('batch_business_date', sa.Date(), nullable=True), schema='oneview')
    op.add_column('provider_affiliation', sa.Column('group', sa.String(), nullable=True), schema='oneview')
    op.add_column('provider_affiliation', sa.Column('group_description', sa.String(), nullable=True), schema='oneview')
    op.create_foreign_key(op.f('fk_provider_affiliation_batch_business_date_iqvia_update'), 'provider_affiliation', 'iqvia_update', ['batch_business_date'], ['date'], source_schema='oneview', referent_schema='oneview')
    op.add_column('residency_program', sa.Column('accreditation_effective_date', sa.Date(), nullable=True), schema='oneview')
    op.add_column('residency_program', sa.Column('accreditation_length', sa.String(), nullable=True), schema='oneview')
    op.add_column('residency_program', sa.Column('accreditation_status', sa.String(), nullable=True), schema='oneview')
    op.add_column('residency_program', sa.Column('acgme_accredited', sa.String(), nullable=True), schema='oneview')
    op.add_column('residency_program', sa.Column('additional_education_accreditation_length', sa.String(), nullable=True), schema='oneview')
    op.add_column('residency_program', sa.Column('american_osteopathic_association_indicator', sa.String(), nullable=True), schema='oneview')
    op.add_column('residency_program', sa.Column('american_osteopathic_association_indicator_program_id', sa.String(), nullable=True), schema='oneview')
    op.add_column('residency_program', sa.Column('contact_director', sa.String(), nullable=True), schema='oneview')
    op.add_column('residency_program', sa.Column('core_program', sa.String(), nullable=True), schema='oneview')
    op.add_column('residency_program', sa.Column('duration', sa.String(), nullable=True), schema='oneview')
    op.add_column('residency_program', sa.Column('federal_code', sa.String(), nullable=True), schema='oneview')
    op.add_column('residency_program', sa.Column('government_affiliated', sa.Boolean(), nullable=True), schema='oneview')
    op.add_column('residency_program', sa.Column('graduate_medical_education_equivalent_years', sa.String(), nullable=True), schema='oneview')
    op.add_column('residency_program', sa.Column('initial_accreditation_date', sa.Date(), nullable=True), schema='oneview')
    op.add_column('residency_program', sa.Column('institution_control', sa.String(), nullable=True), schema='oneview')
    op.add_column('residency_program', sa.Column('last_update_date', sa.Date(), nullable=True), schema='oneview')
    op.add_column('residency_program', sa.Column('last_update_type', sa.String(), nullable=True), schema='oneview')
    op.add_column('residency_program', sa.Column('max_residents_accepted_increase', sa.Integer(), nullable=True), schema='oneview')
    op.add_column('residency_program', sa.Column('medical_records', sa.String(), nullable=True), schema='oneview')
    op.add_column('residency_program', sa.Column('official_address', sa.String(), nullable=True), schema='oneview')
    op.add_column('residency_program', sa.Column('old_name', sa.String(), nullable=True), schema='oneview')
    op.add_column('residency_program', sa.Column('osteopathic_principles', sa.String(), nullable=True), schema='oneview')
    op.add_column('residency_program', sa.Column('other_match', sa.String(), nullable=True), schema='oneview')
    op.add_column('residency_program', sa.Column('other_match_indicator', sa.String(), nullable=True), schema='oneview')
    op.add_column('residency_program', sa.Column('percent_at_primary_site', sa.String(), nullable=True), schema='oneview')
    op.add_column('residency_program', sa.Column('preliminary_positions_offered', sa.Boolean(), nullable=True), schema='oneview')
    op.add_column('residency_program', sa.Column('primary_site', sa.String(), nullable=True), schema='oneview')
    op.add_column('residency_program', sa.Column('region_code', sa.String(), nullable=True), schema='oneview')
    op.add_column('residency_program', sa.Column('sequence_number', sa.String(), nullable=True), schema='oneview')
    op.add_column('residency_program', sa.Column('specialty', sa.String(), nullable=True), schema='oneview')
    op.add_column('residency_program', sa.Column('type', sa.String(), nullable=True), schema='oneview')
    op.add_column('residency_program', sa.Column('uses_sfmatch', sa.Boolean(), nullable=True), schema='oneview')
    op.add_column('residency_program_institution', sa.Column('last_update_date', sa.Date(), nullable=True), schema='oneview')
    op.add_column('residency_program_institution', sa.Column('primary_clinical_location', sa.String(), nullable=True), schema='oneview')
    op.add_column('residency_program_institution', sa.Column('program', sa.String(), nullable=True), schema='oneview')
    op.add_column('residency_program_institution', sa.Column('sponsors_residents', sa.Boolean(), nullable=True), schema='oneview')
    op.add_column('residency_program_personnel_member', sa.Column('last_update_date', sa.Date(), nullable=True), schema='oneview')
    op.drop_column('residency_program_personnel_member', 'personnel_type', schema='oneview')
    op.drop_column('residency_program_personnel_member', 'aamc_id', schema='oneview')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('residency_program_personnel_member', sa.Column('aamc_id', sa.VARCHAR(), autoincrement=False, nullable=True), schema='oneview')
    op.add_column('residency_program_personnel_member', sa.Column('personnel_type', sa.VARCHAR(), autoincrement=False, nullable=True), schema='oneview')
    op.drop_column('residency_program_personnel_member', 'last_update_date', schema='oneview')
    op.drop_column('residency_program_institution', 'sponsors_residents', schema='oneview')
    op.drop_column('residency_program_institution', 'program', schema='oneview')
    op.drop_column('residency_program_institution', 'primary_clinical_location', schema='oneview')
    op.drop_column('residency_program_institution', 'last_update_date', schema='oneview')
    op.drop_column('residency_program', 'uses_sfmatch', schema='oneview')
    op.drop_column('residency_program', 'type', schema='oneview')
    op.drop_column('residency_program', 'specialty', schema='oneview')
    op.drop_column('residency_program', 'sequence_number', schema='oneview')
    op.drop_column('residency_program', 'region_code', schema='oneview')
    op.drop_column('residency_program', 'primary_site', schema='oneview')
    op.drop_column('residency_program', 'preliminary_positions_offered', schema='oneview')
    op.drop_column('residency_program', 'percent_at_primary_site', schema='oneview')
    op.drop_column('residency_program', 'other_match_indicator', schema='oneview')
    op.drop_column('residency_program', 'other_match', schema='oneview')
    op.drop_column('residency_program', 'osteopathic_principles', schema='oneview')
    op.drop_column('residency_program', 'old_name', schema='oneview')
    op.drop_column('residency_program', 'official_address', schema='oneview')
    op.drop_column('residency_program', 'medical_records', schema='oneview')
    op.drop_column('residency_program', 'max_residents_accepted_increase', schema='oneview')
    op.drop_column('residency_program', 'last_update_type', schema='oneview')
    op.drop_column('residency_program', 'last_update_date', schema='oneview')
    op.drop_column('residency_program', 'institution_control', schema='oneview')
    op.drop_column('residency_program', 'initial_accreditation_date', schema='oneview')
    op.drop_column('residency_program', 'graduate_medical_education_equivalent_years', schema='oneview')
    op.drop_column('residency_program', 'government_affiliated', schema='oneview')
    op.drop_column('residency_program', 'federal_code', schema='oneview')
    op.drop_column('residency_program', 'duration', schema='oneview')
    op.drop_column('residency_program', 'core_program', schema='oneview')
    op.drop_column('residency_program', 'contact_director', schema='oneview')
    op.drop_column('residency_program', 'american_osteopathic_association_indicator_program_id', schema='oneview')
    op.drop_column('residency_program', 'american_osteopathic_association_indicator', schema='oneview')
    op.drop_column('residency_program', 'additional_education_accreditation_length', schema='oneview')
    op.drop_column('residency_program', 'acgme_accredited', schema='oneview')
    op.drop_column('residency_program', 'accreditation_status', schema='oneview')
    op.drop_column('residency_program', 'accreditation_length', schema='oneview')
    op.drop_column('residency_program', 'accreditation_effective_date', schema='oneview')
    op.drop_constraint(op.f('fk_provider_affiliation_batch_business_date_iqvia_update'), 'provider_affiliation', schema='oneview', type_='foreignkey')
    op.drop_column('provider_affiliation', 'group_description', schema='oneview')
    op.drop_column('provider_affiliation', 'group', schema='oneview')
    op.drop_column('provider_affiliation', 'batch_business_date', schema='oneview')
    op.drop_constraint(op.f('fk_provider_batch_business_date_iqvia_update'), 'provider', schema='oneview', type_='foreignkey')
    op.drop_column('provider', 'universal_provider_identification', schema='oneview')
    op.drop_column('provider', 'national_provider_identifier', schema='oneview')
    op.drop_column('provider', 'batch_business_date', schema='oneview')
    op.drop_column('physician_race_ethnicity', 'gender', schema='oneview')
    op.drop_column('physician_race_ethnicity', 'current_person_type', schema='oneview')
    op.drop_column('credentialing_order', 'unique_physician_identification_number', schema='oneview')
    op.drop_column('credentialing_order', 'person_id', schema='oneview')
    op.add_column('credentialing_customer', sa.Column('isell_username', sa.VARCHAR(), autoincrement=False, nullable=False), schema='oneview')
    op.drop_column('credentialing_customer', 'current_indicator', schema='oneview')
    op.drop_constraint(op.f('fk_business_batch_business_date_iqvia_update'), 'business', schema='oneview', type_='foreignkey')
    op.drop_column('business', 'total_staffed_beds', schema='oneview')
    op.drop_column('business', 'total_licensed_beds', schema='oneview')
    op.drop_column('business', 'total_census_beds', schema='oneview')
    op.drop_column('business', 'teaching_hospital', schema='oneview')
    op.drop_column('business', 'status_indicator', schema='oneview')
    op.drop_column('business', 'replacement_business', schema='oneview')
    op.drop_column('business', 'record_type', schema='oneview')
    op.drop_column('business', 'primary_class_of_trade', schema='oneview')
    op.drop_column('business', 'pay_for_performance', schema='oneview')
    op.drop_column('business', 'number_of_providers', schema='oneview')
    op.drop_column('business', 'metropolitan_statistical_area', schema='oneview')
    op.drop_column('business', 'longitude', schema='oneview')
    op.drop_column('business', 'latitude', schema='oneview')
    op.drop_column('business', 'iqvia_address_id', schema='oneview')
    op.drop_column('business', 'hospital_care', schema='oneview')
    op.drop_column('business', 'federal_information_processing_standard_state', schema='oneview')
    op.drop_column('business', 'federal_information_processing_standard_county', schema='oneview')
    op.drop_column('business', 'electronically_prescribe', schema='oneview')
    op.drop_column('business', 'electronic_medical_record', schema='oneview')
    op.drop_column('business', 'deactivation_reason', schema='oneview')
    op.drop_column('business', 'class_of_trade_specialty_description', schema='oneview')
    op.drop_column('business', 'class_of_trade_specialty', schema='oneview')
    op.drop_column('business', 'class_of_trade_facility_type_description', schema='oneview')
    op.drop_column('business', 'class_of_trade_facility_type', schema='oneview')
    op.drop_column('business', 'class_of_trade_classification_description', schema='oneview')
    op.drop_column('business', 'class_of_trade_classification', schema='oneview')
    op.drop_column('business', 'batch_business_date', schema='oneview')
    op.drop_table('zip_code_core_based_statistical_areas', schema='oneview')
    op.drop_table('subsidiary_business', schema='oneview')
    op.drop_table('corporate_parent_business', schema='oneview')
    op.drop_table('zip_code', schema='oneview')
    op.drop_table('metropolitan_statistical_area', schema='oneview')
    op.drop_table('iqvia_update', schema='oneview')
    op.drop_table('historical_resident', schema='oneview')
    op.drop_table('county', schema='oneview')
    op.drop_table('core_based_statistical_area_zip_code', schema='oneview')
    op.drop_table('census', schema='oneview')
    op.drop_table('area_code', schema='oneview')
    # ### end Alembic commands ###
