"""Added new reference tables

Revision ID: d121a48dcb43
Revises: 5e143bdd1697
Create Date: 2021-09-02 16:24:56.209589+00:00

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'd121a48dcb43'
down_revision = '5e143bdd1697'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('association_status',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_association_status')),
    schema='oneview'
    )
    op.create_table('class_of_trade_facility',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_class_of_trade_facility')),
    schema='oneview'
    )
    op.create_table('class_of_trade_specialty',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_class_of_trade_specialty')),
    schema='oneview'
    )
    op.create_table('owner_status',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_owner_status')),
    schema='oneview'
    )
    op.create_table('profit_status',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_profit_status')),
    schema='oneview'
    )
    op.create_table('provider_affiliation_group',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_provider_affiliation_group')),
    schema='oneview'
    )
    op.create_table('provider_affiliation_type',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_provider_affiliation_type')),
    schema='oneview'
    )
    op.create_table('states',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_states')),
    schema='oneview'
    )
    op.create_foreign_key(op.f('fk_business_profit_status_profit_status'), 'business', 'profit_status', ['profit_status'], ['id'], source_schema='oneview', referent_schema='oneview')
    op.create_foreign_key(op.f('fk_business_class_of_trade_facility_type_class_of_trade_facility'), 'business', 'class_of_trade_facility', ['class_of_trade_facility_type'], ['id'], source_schema='oneview', referent_schema='oneview')
    op.create_foreign_key(op.f('fk_business_class_of_trade_specialty_class_of_trade_specialty'), 'business', 'class_of_trade_specialty', ['class_of_trade_specialty'], ['id'], source_schema='oneview', referent_schema='oneview')
    op.create_foreign_key(op.f('fk_business_owner_status_owner_status'), 'business', 'owner_status', ['owner_status'], ['id'], source_schema='oneview', referent_schema='oneview')
    op.add_column('physician', sa.Column('census_block_group', sa.String(), nullable=True), schema='oneview')
    op.add_column('physician', sa.Column('census_division', sa.String(), nullable=True), schema='oneview')
    op.add_column('physician', sa.Column('census_group', sa.String(), nullable=True), schema='oneview')
    op.add_column('physician', sa.Column('census_region', sa.String(), nullable=True), schema='oneview')
    op.add_column('physician', sa.Column('census_suffix', sa.String(), nullable=True), schema='oneview')
    op.add_column('physician', sa.Column('census_tract', sa.String(), nullable=True), schema='oneview')
    op.add_column('physician', sa.Column('membership_year', sa.String(), nullable=True), schema='oneview')
    op.add_column('physician', sa.Column('type', sa.String(), nullable=True), schema='oneview')
    op.create_foreign_key(op.f('fk_physician_state_states'), 'physician', 'states', ['state'], ['id'], source_schema='oneview', referent_schema='oneview')
    op.drop_column('physician', 'tract', schema='oneview')
    op.drop_column('physician', 'suffix', schema='oneview')
    op.drop_column('physician', 'block_group', schema='oneview')
    op.drop_column('physician', 'region', schema='oneview')
    op.drop_column('physician', 'division', schema='oneview')
    op.drop_column('physician', 'group', schema='oneview')
    op.create_foreign_key(op.f('fk_provider_affiliation_type_provider_affiliation_type'), 'provider_affiliation', 'provider_affiliation_type', ['type'], ['id'], source_schema='oneview', referent_schema='oneview')
    op.create_foreign_key(op.f('fk_provider_affiliation_group_provider_affiliation_group'), 'provider_affiliation', 'provider_affiliation_group', ['group'], ['id'], source_schema='oneview', referent_schema='oneview')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(op.f('fk_provider_affiliation_group_provider_affiliation_group'), 'provider_affiliation', schema='oneview', type_='foreignkey')
    op.drop_constraint(op.f('fk_provider_affiliation_type_provider_affiliation_type'), 'provider_affiliation', schema='oneview', type_='foreignkey')
    op.add_column('physician', sa.Column('group', sa.VARCHAR(), autoincrement=False, nullable=True), schema='oneview')
    op.add_column('physician', sa.Column('division', sa.VARCHAR(), autoincrement=False, nullable=True), schema='oneview')
    op.add_column('physician', sa.Column('region', sa.VARCHAR(), autoincrement=False, nullable=True), schema='oneview')
    op.add_column('physician', sa.Column('block_group', sa.VARCHAR(), autoincrement=False, nullable=True), schema='oneview')
    op.add_column('physician', sa.Column('suffix', sa.VARCHAR(), autoincrement=False, nullable=True), schema='oneview')
    op.add_column('physician', sa.Column('tract', sa.VARCHAR(), autoincrement=False, nullable=True), schema='oneview')
    op.drop_constraint(op.f('fk_physician_state_states'), 'physician', schema='oneview', type_='foreignkey')
    op.drop_column('physician', 'type', schema='oneview')
    op.drop_column('physician', 'membership_year', schema='oneview')
    op.drop_column('physician', 'census_tract', schema='oneview')
    op.drop_column('physician', 'census_suffix', schema='oneview')
    op.drop_column('physician', 'census_region', schema='oneview')
    op.drop_column('physician', 'census_group', schema='oneview')
    op.drop_column('physician', 'census_division', schema='oneview')
    op.drop_column('physician', 'census_block_group', schema='oneview')
    op.drop_constraint(op.f('fk_business_owner_status_owner_status'), 'business', schema='oneview', type_='foreignkey')
    op.drop_constraint(op.f('fk_business_class_of_trade_specialty_class_of_trade_specialty'), 'business', schema='oneview', type_='foreignkey')
    op.drop_constraint(op.f('fk_business_class_of_trade_facility_type_class_of_trade_facility'), 'business', schema='oneview', type_='foreignkey')
    op.drop_constraint(op.f('fk_business_profit_status_profit_status'), 'business', schema='oneview', type_='foreignkey')
    op.drop_table('states', schema='oneview')
    op.drop_table('provider_affiliation_type', schema='oneview')
    op.drop_table('provider_affiliation_group', schema='oneview')
    op.drop_table('profit_status', schema='oneview')
    op.drop_table('owner_status', schema='oneview')
    op.drop_table('class_of_trade_specialty', schema='oneview')
    op.drop_table('class_of_trade_facility', schema='oneview')
    op.drop_table('association_status', schema='oneview')
    # ### end Alembic commands ###
