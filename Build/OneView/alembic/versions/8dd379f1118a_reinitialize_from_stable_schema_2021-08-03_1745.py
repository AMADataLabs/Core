"""Reinitialize from stable schema.

Revision ID: 8dd379f1118a
Revises: 
Create Date: 2021-08-03 17:45:00.321972+00:00

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '8dd379f1118a'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('area_code',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('area_code', sa.String(), nullable=False),
    sa.Column('prefix', sa.String(), nullable=False),
    sa.Column('latitude', sa.String(), nullable=False),
    sa.Column('longitude', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_area_code')),
    schema='oneview'
    )
    op.create_table('census',
    sa.Column('zip_code', sa.String(), nullable=False),
    sa.Column('population', sa.Integer(), nullable=False),
    sa.Column('urban', sa.Integer(), nullable=False),
    sa.Column('suburban', sa.Integer(), nullable=False),
    sa.Column('farm', sa.Integer(), nullable=False),
    sa.Column('non_farm', sa.Integer(), nullable=False),
    sa.Column('white', sa.Integer(), nullable=False),
    sa.Column('black', sa.Integer(), nullable=False),
    sa.Column('indian', sa.Integer(), nullable=False),
    sa.Column('asian', sa.Integer(), nullable=False),
    sa.Column('hawaiian', sa.Integer(), nullable=False),
    sa.Column('race_other', sa.Integer(), nullable=False),
    sa.Column('hispanic', sa.Integer(), nullable=False),
    sa.Column('age_0_to_4', sa.Integer(), nullable=False),
    sa.Column('age_5_to_9', sa.Integer(), nullable=False),
    sa.Column('age_10_to_14', sa.Integer(), nullable=False),
    sa.Column('age_15_to_17', sa.Integer(), nullable=False),
    sa.Column('age_18_to_19', sa.Integer(), nullable=False),
    sa.Column('age_20', sa.Integer(), nullable=False),
    sa.Column('age_21', sa.Integer(), nullable=False),
    sa.Column('age_22_to_24', sa.Integer(), nullable=False),
    sa.Column('age_25_to_29', sa.Integer(), nullable=False),
    sa.Column('age_30_to_34', sa.Integer(), nullable=False),
    sa.Column('age_35_to_39', sa.Integer(), nullable=False),
    sa.Column('age_40_to_44', sa.Integer(), nullable=False),
    sa.Column('age_45_to_49', sa.Integer(), nullable=False),
    sa.Column('age_50_to_54', sa.Integer(), nullable=False),
    sa.Column('age_55_to_59', sa.Integer(), nullable=False),
    sa.Column('age_60_to_61', sa.Integer(), nullable=False),
    sa.Column('age_65_to_66', sa.Integer(), nullable=False),
    sa.Column('age_67_to_69', sa.Integer(), nullable=False),
    sa.Column('age_70_to_74', sa.Integer(), nullable=False),
    sa.Column('age_75_to_79', sa.Integer(), nullable=False),
    sa.Column('age_80_to_84', sa.Integer(), nullable=False),
    sa.Column('age_85_plus', sa.Integer(), nullable=False),
    sa.Column('education_below_9', sa.Integer(), nullable=False),
    sa.Column('education_9_to_12', sa.Integer(), nullable=False),
    sa.Column('education_high_school', sa.Integer(), nullable=False),
    sa.Column('education_some_college', sa.Integer(), nullable=False),
    sa.Column('education_association', sa.Integer(), nullable=False),
    sa.Column('education_bachelor', sa.Integer(), nullable=False),
    sa.Column('education_professional', sa.Integer(), nullable=False),
    sa.Column('household_income', sa.Integer(), nullable=False),
    sa.Column('per_person_income', sa.Integer(), nullable=False),
    sa.Column('house_value', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('zip_code', name=op.f('pk_census')),
    schema='oneview'
    )
    op.create_table('core_based_statistical_area',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_core_based_statistical_area')),
    schema='oneview'
    )
    op.create_table('core_based_statistical_area_melissa',
    sa.Column('code', sa.String(), nullable=False),
    sa.Column('type', sa.String(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('level', sa.String(), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('code', name=op.f('pk_core_based_statistical_area_melissa')),
    schema='oneview'
    )
    op.create_table('county',
    sa.Column('federal_information_processing_standard_code', sa.String(), nullable=False),
    sa.Column('county_name', sa.String(), nullable=False),
    sa.Column('state', sa.String(), nullable=False),
    sa.Column('time_zone', sa.String(), nullable=False),
    sa.Column('county_type', sa.String(), nullable=False),
    sa.Column('county_seat', sa.String(), nullable=False),
    sa.Column('name_type', sa.String(), nullable=False),
    sa.Column('elevation', sa.Integer(), nullable=False),
    sa.Column('person_per_household', sa.Integer(), nullable=False),
    sa.Column('population', sa.Integer(), nullable=False),
    sa.Column('area', sa.Integer(), nullable=False),
    sa.Column('households', sa.Integer(), nullable=False),
    sa.Column('white', sa.Integer(), nullable=False),
    sa.Column('black', sa.Integer(), nullable=False),
    sa.Column('hispanic', sa.Integer(), nullable=False),
    sa.Column('average_income', sa.String(), nullable=False),
    sa.Column('average_house', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('federal_information_processing_standard_code', name=op.f('pk_county')),
    schema='oneview'
    )
    op.create_table('credentialing_customer',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('number', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('type', sa.String(), nullable=False),
    sa.Column('type_description', sa.String(), nullable=False),
    sa.Column('category', sa.String(), nullable=False),
    sa.Column('category_description', sa.String(), nullable=False),
    sa.Column('current_indicator', sa.String(), nullable=False),
    sa.Column('address_1', sa.String(), nullable=False),
    sa.Column('address_2', sa.String(), nullable=False),
    sa.Column('address_3', sa.String(), nullable=False),
    sa.Column('city', sa.String(), nullable=False),
    sa.Column('state', sa.String(), nullable=False),
    sa.Column('zipcode', sa.String(), nullable=False),
    sa.Column('phone_number', sa.String(), nullable=False),
    sa.Column('company_name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_credentialing_customer')),
    schema='oneview'
    )
    op.create_table('credentialing_product',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_credentialing_product')),
    schema='oneview'
    )
    op.create_table('federal_information_processing_standard_county',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('state', sa.String(), nullable=False),
    sa.Column('county', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_federal_information_processing_standard_county')),
    sa.UniqueConstraint('state', 'county', name=op.f('uq_federal_information_processing_standard_county_state')),
    schema='oneview'
    )
    op.create_table('historical_resident',
    sa.Column('medical_education_number', sa.String(), nullable=False),
    sa.Column('institution_code', sa.String(), nullable=False),
    sa.Column('specialty', sa.String(), nullable=False),
    sa.Column('training_type', sa.String(), nullable=False),
    sa.Column('start_year', sa.Integer(), nullable=False),
    sa.Column('end_year', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('medical_education_number', name=op.f('pk_historical_resident')),
    schema='oneview'
    )
    op.create_table('iqvia_update',
    sa.Column('date', sa.Date(), nullable=False),
    sa.PrimaryKeyConstraint('date', name=op.f('pk_iqvia_update')),
    sa.UniqueConstraint('date', name=op.f('uq_iqvia_update_date')),
    schema='oneview'
    )
    op.create_table('major_professional_activity',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_major_professional_activity')),
    schema='oneview'
    )
    op.create_table('metropolitan_statistical_area',
    sa.Column('code', sa.String(), nullable=False),
    sa.Column('type', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('consolidated_metropolitan_statistical_area', sa.String(), nullable=False),
    sa.Column('population', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('code', name=op.f('pk_metropolitan_statistical_area')),
    schema='oneview'
    )
    op.create_table('present_employment',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_present_employment')),
    schema='oneview'
    )
    op.create_table('residency_program_institution',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('affiliation', sa.String(), nullable=True),
    sa.Column('primary_clinical_location', sa.String(), nullable=True),
    sa.Column('last_update_date', sa.Date(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_residency_program_institution')),
    schema='oneview'
    )
    op.create_table('specialty',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_specialty')),
    schema='oneview'
    )
    op.create_table('type_of_practice',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_type_of_practice')),
    schema='oneview'
    )
    op.create_table('zip_code',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('zip_code', sa.String(), nullable=False),
    sa.Column('state', sa.String(), nullable=False),
    sa.Column('city', sa.String(), nullable=False),
    sa.Column('type', sa.String(), nullable=False),
    sa.Column('county_federal_information_processing', sa.String(), nullable=False),
    sa.Column('latitude', sa.String(), nullable=False),
    sa.Column('longitude', sa.String(), nullable=False),
    sa.Column('metropolitan_statistical_area', sa.String(), nullable=False),
    sa.Column('primary_metropolitan_statistical_area', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_zip_code')),
    schema='oneview'
    )
    op.create_table('business',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('doing_business_as', sa.String(), nullable=True),
    sa.Column('iqvia_address_id', sa.String(), nullable=True),
    sa.Column('physical_address_1', sa.String(), nullable=True),
    sa.Column('physical_address_2', sa.String(), nullable=True),
    sa.Column('physical_city', sa.String(), nullable=True),
    sa.Column('physical_state', sa.String(), nullable=True),
    sa.Column('physical_zipcode', sa.String(), nullable=True),
    sa.Column('postal_address_1', sa.String(), nullable=True),
    sa.Column('postal_address_2', sa.String(), nullable=True),
    sa.Column('postal_city', sa.String(), nullable=True),
    sa.Column('postal_state', sa.String(), nullable=True),
    sa.Column('postal_zipcode', sa.String(), nullable=True),
    sa.Column('phone', sa.String(), nullable=True),
    sa.Column('fax', sa.String(), nullable=True),
    sa.Column('website', sa.String(), nullable=True),
    sa.Column('latitude', sa.String(), nullable=True),
    sa.Column('longitude', sa.String(), nullable=True),
    sa.Column('owner_status', sa.String(), nullable=True),
    sa.Column('profit_status', sa.String(), nullable=True),
    sa.Column('primary_class_of_trade', sa.String(), nullable=True),
    sa.Column('class_of_trade_classification', sa.String(), nullable=True),
    sa.Column('class_of_trade_classification_description', sa.String(), nullable=True),
    sa.Column('class_of_trade_facility_type', sa.String(), nullable=True),
    sa.Column('class_of_trade_facility_type_description', sa.String(), nullable=True),
    sa.Column('class_of_trade_specialty', sa.String(), nullable=True),
    sa.Column('class_of_trade_specialty_description', sa.String(), nullable=True),
    sa.Column('record_type', sa.String(), nullable=True),
    sa.Column('total_licensed_beds', sa.String(), nullable=True),
    sa.Column('total_census_beds', sa.String(), nullable=True),
    sa.Column('total_staffed_beds', sa.String(), nullable=True),
    sa.Column('teaching_hospital', sa.String(), nullable=True),
    sa.Column('hospital_care', sa.String(), nullable=True),
    sa.Column('metropolitan_statistical_area', sa.String(), nullable=True),
    sa.Column('federal_information_processing_standard_state', sa.String(), nullable=True),
    sa.Column('federal_information_processing_standard_county', sa.String(), nullable=True),
    sa.Column('number_of_providers', sa.String(), nullable=True),
    sa.Column('electronic_medical_record', sa.String(), nullable=True),
    sa.Column('electronically_prescribe', sa.String(), nullable=True),
    sa.Column('pay_for_performance', sa.String(), nullable=True),
    sa.Column('deactivation_reason', sa.String(), nullable=True),
    sa.Column('replacement_business', sa.String(), nullable=True),
    sa.Column('status_indicator', sa.String(), nullable=True),
    sa.Column('batch_business_date', sa.Date(), nullable=True),
    sa.ForeignKeyConstraint(['batch_business_date'], ['oneview.iqvia_update.date'], name=op.f('fk_business_batch_business_date_iqvia_update')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_business')),
    schema='oneview'
    )
    op.create_table('credentialing_customer_institution',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('customer', sa.Integer(), nullable=False),
    sa.Column('residency_program_institution', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['customer'], ['oneview.credentialing_customer.id'], name=op.f('fk_credentialing_customer_institution_customer_credentialing_customer')),
    sa.ForeignKeyConstraint(['residency_program_institution'], ['oneview.residency_program_institution.id'], name=op.f('fk_credentialing_customer_institution_residency_program_institution_residency_program_institution')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_credentialing_customer_institution')),
    schema='oneview'
    )
    op.create_table('physician',
    sa.Column('medical_education_number', sa.String(), nullable=False),
    sa.Column('address_type', sa.String(), nullable=True),
    sa.Column('mailing_name', sa.String(), nullable=True),
    sa.Column('last_name', sa.String(), nullable=True),
    sa.Column('first_name', sa.String(), nullable=True),
    sa.Column('middle_name', sa.String(), nullable=True),
    sa.Column('name_suffix', sa.String(), nullable=True),
    sa.Column('preferred_address_2', sa.String(), nullable=True),
    sa.Column('preferred_address_1', sa.String(), nullable=True),
    sa.Column('city', sa.String(), nullable=True),
    sa.Column('state', sa.String(), nullable=True),
    sa.Column('zipcode', sa.String(), nullable=True),
    sa.Column('sector', sa.String(), nullable=True),
    sa.Column('carrier_route', sa.String(), nullable=True),
    sa.Column('address_undeliverable', sa.String(), nullable=True),
    sa.Column('federal_information_processing_standard_county', sa.String(), nullable=True),
    sa.Column('federal_information_processing_standard_state', sa.String(), nullable=True),
    sa.Column('printer_control_code_begin', sa.String(), nullable=True),
    sa.Column('barcode_zipcode', sa.String(), nullable=True),
    sa.Column('barcode_zipcode_plus_4', sa.String(), nullable=True),
    sa.Column('delivery_point', sa.String(), nullable=True),
    sa.Column('check_digit', sa.String(), nullable=True),
    sa.Column('printer_control_code_end', sa.String(), nullable=True),
    sa.Column('region', sa.String(), nullable=True),
    sa.Column('division', sa.String(), nullable=True),
    sa.Column('group', sa.String(), nullable=True),
    sa.Column('tract', sa.String(), nullable=True),
    sa.Column('suffix', sa.String(), nullable=True),
    sa.Column('block_group', sa.String(), nullable=True),
    sa.Column('metropolitan_statistical_area_population', sa.String(), nullable=True),
    sa.Column('micro_metro_indicator', sa.String(), nullable=True),
    sa.Column('core_based_statistical_area', sa.String(), nullable=True),
    sa.Column('core_based_statistical_area_division', sa.String(), nullable=True),
    sa.Column('degree_type', sa.String(), nullable=True),
    sa.Column('birth_year', sa.String(), nullable=True),
    sa.Column('birth_city', sa.String(), nullable=True),
    sa.Column('birth_state', sa.String(), nullable=True),
    sa.Column('birth_country', sa.String(), nullable=True),
    sa.Column('gender', sa.String(), nullable=True),
    sa.Column('telephone_number', sa.String(), nullable=True),
    sa.Column('presumed_dead', sa.String(), nullable=True),
    sa.Column('fax_number', sa.String(), nullable=True),
    sa.Column('type_of_practice', sa.String(), nullable=True),
    sa.Column('present_employment', sa.String(), nullable=True),
    sa.Column('primary_specialty', sa.String(), nullable=True),
    sa.Column('secondary_specialty', sa.String(), nullable=True),
    sa.Column('major_professional_activity', sa.String(), nullable=True),
    sa.Column('physician_recognition_award_recipient', sa.String(), nullable=True),
    sa.Column('physician_recognition_award_expiration_date', sa.String(), nullable=True),
    sa.Column('graduate_medical_education_confirm', sa.String(), nullable=True),
    sa.Column('from_date', sa.String(), nullable=True),
    sa.Column('end_date', sa.String(), nullable=True),
    sa.Column('year_in_program', sa.String(), nullable=True),
    sa.Column('post_graduate_year', sa.String(), nullable=True),
    sa.Column('graduate_medical_education_primary_specialty', sa.String(), nullable=True),
    sa.Column('graduate_medical_education_secondary_specialty', sa.String(), nullable=True),
    sa.Column('training_type', sa.String(), nullable=True),
    sa.Column('graduate_medical_education_hospital_state', sa.String(), nullable=True),
    sa.Column('graduate_medical_education_hospital', sa.String(), nullable=True),
    sa.Column('medical_school_state', sa.String(), nullable=True),
    sa.Column('medical_school', sa.String(), nullable=True),
    sa.Column('medical_school_graduation_year', sa.String(), nullable=True),
    sa.Column('no_contact_type', sa.String(), nullable=True),
    sa.Column('no_web', sa.String(), nullable=True),
    sa.Column('physician_data_restriction_program', sa.String(), nullable=True),
    sa.Column('physician_data_restriction_program_date', sa.String(), nullable=True),
    sa.Column('polo_address_2', sa.String(), nullable=True),
    sa.Column('polo_address_1', sa.String(), nullable=True),
    sa.Column('polo_city', sa.String(), nullable=True),
    sa.Column('polo_state', sa.String(), nullable=True),
    sa.Column('polo_zipcode', sa.String(), nullable=True),
    sa.Column('polo_sector', sa.String(), nullable=True),
    sa.Column('polo_carrier_route', sa.String(), nullable=True),
    sa.Column('most_recent_former_last_name', sa.String(), nullable=True),
    sa.Column('most_recent_former_middle_name', sa.String(), nullable=True),
    sa.Column('most_recent_former_first_name', sa.String(), nullable=True),
    sa.Column('next_most_recent_former_last_name', sa.String(), nullable=True),
    sa.Column('next_most_recent_former_middle_name', sa.String(), nullable=True),
    sa.Column('next_most_recent_former_first_name', sa.String(), nullable=True),
    sa.Column('national_provider_identifier', sa.String(), nullable=True),
    sa.Column('party_id', sa.String(), nullable=True),
    sa.Column('entity_id', sa.String(), nullable=True),
    sa.Column('race_ethnicity', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['core_based_statistical_area'], ['oneview.core_based_statistical_area.id'], name=op.f('fk_physician_core_based_statistical_area_core_based_statistical_area')),
    sa.ForeignKeyConstraint(['federal_information_processing_standard_state', 'federal_information_processing_standard_county'], ['oneview.federal_information_processing_standard_county.state', 'oneview.federal_information_processing_standard_county.county'], name=op.f('fk_physician_federal_information_processing_standard_state_federal_information_processing_standard_county')),
    sa.ForeignKeyConstraint(['major_professional_activity'], ['oneview.major_professional_activity.id'], name=op.f('fk_physician_major_professional_activity_major_professional_activity')),
    sa.ForeignKeyConstraint(['present_employment'], ['oneview.present_employment.id'], name=op.f('fk_physician_present_employment_present_employment')),
    sa.ForeignKeyConstraint(['primary_specialty'], ['oneview.specialty.id'], name=op.f('fk_physician_primary_specialty_specialty')),
    sa.ForeignKeyConstraint(['secondary_specialty'], ['oneview.specialty.id'], name=op.f('fk_physician_secondary_specialty_specialty')),
    sa.ForeignKeyConstraint(['type_of_practice'], ['oneview.type_of_practice.id'], name=op.f('fk_physician_type_of_practice_type_of_practice')),
    sa.PrimaryKeyConstraint('medical_education_number', name=op.f('pk_physician')),
    schema='oneview'
    )
    op.create_table('residency_program',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('specialty', sa.String(), nullable=True),
    sa.Column('institution_control', sa.String(), nullable=True),
    sa.Column('sequence_number', sa.String(), nullable=True),
    sa.Column('federal_code', sa.String(), nullable=True),
    sa.Column('region_code', sa.String(), nullable=True),
    sa.Column('acgme_accredited', sa.String(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('web_address', sa.String(), nullable=True),
    sa.Column('contact_director', sa.Boolean(), nullable=True),
    sa.Column('accreditation_status', sa.String(), nullable=True),
    sa.Column('accreditation_effective_date', sa.Date(), nullable=True),
    sa.Column('initial_accreditation_date', sa.Date(), nullable=True),
    sa.Column('accreditation_length', sa.String(), nullable=True),
    sa.Column('duration', sa.String(), nullable=True),
    sa.Column('government_affiliated', sa.Boolean(), nullable=True),
    sa.Column('graduate_medical_education_equivalent_years', sa.String(), nullable=True),
    sa.Column('preliminary_years_required', sa.String(), nullable=True),
    sa.Column('preliminary_positions_offered', sa.Boolean(), nullable=True),
    sa.Column('type', sa.String(), nullable=True),
    sa.Column('max_residents_accepted_increase', sa.Integer(), nullable=True),
    sa.Column('percent_at_primary_site', sa.String(), nullable=True),
    sa.Column('primary_site', sa.String(), nullable=True),
    sa.Column('core_program', sa.String(), nullable=True),
    sa.Column('medical_records', sa.Boolean(), nullable=True),
    sa.Column('official_address', sa.Boolean(), nullable=True),
    sa.Column('uses_sfmatch', sa.Boolean(), nullable=True),
    sa.Column('other_match_indicator', sa.Boolean(), nullable=True),
    sa.Column('other_match', sa.String(), nullable=True),
    sa.Column('additional_education_accreditation_length', sa.Boolean(), nullable=True),
    sa.Column('last_update_date', sa.Date(), nullable=True),
    sa.Column('last_update_type', sa.String(), nullable=True),
    sa.Column('american_osteopathic_association_indicator', sa.Boolean(), nullable=True),
    sa.Column('american_osteopathic_association_indicator_program', sa.String(), nullable=True),
    sa.Column('osteopathic_principles', sa.Boolean(), nullable=True),
    sa.Column('address_1', sa.String(), nullable=True),
    sa.Column('address_2', sa.String(), nullable=True),
    sa.Column('address_3', sa.String(), nullable=True),
    sa.Column('city', sa.String(), nullable=True),
    sa.Column('state', sa.String(), nullable=True),
    sa.Column('zipcode', sa.String(), nullable=True),
    sa.Column('institution', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['institution'], ['oneview.residency_program_institution.id'], name=op.f('fk_residency_program_institution_residency_program_institution')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_residency_program')),
    schema='oneview'
    )
    op.create_table('zip_code_core_based_statistical_areas',
    sa.Column('zip_code', sa.String(), nullable=False),
    sa.Column('core_based_statistical_area', sa.String(), nullable=False),
    sa.Column('division', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['core_based_statistical_area'], ['oneview.core_based_statistical_area_melissa.code'], name=op.f('fk_zip_code_core_based_statistical_areas_core_based_statistical_area_core_based_statistical_area_melissa')),
    sa.PrimaryKeyConstraint('zip_code', name=op.f('pk_zip_code_core_based_statistical_areas')),
    schema='oneview'
    )
    op.create_table('corporate_parent_business',
    sa.Column('child', sa.String(), nullable=False),
    sa.Column('parent', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['child'], ['oneview.business.id'], name=op.f('fk_corporate_parent_business_child_business')),
    sa.ForeignKeyConstraint(['parent'], ['oneview.business.id'], name=op.f('fk_corporate_parent_business_parent_business')),
    sa.PrimaryKeyConstraint('child', name=op.f('pk_corporate_parent_business')),
    schema='oneview'
    )
    op.create_table('credentialing_customer_business',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('customer', sa.Integer(), nullable=False),
    sa.Column('business', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['business'], ['oneview.business.id'], name=op.f('fk_credentialing_customer_business_business_business')),
    sa.ForeignKeyConstraint(['customer'], ['oneview.credentialing_customer.id'], name=op.f('fk_credentialing_customer_business_customer_credentialing_customer')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_credentialing_customer_business')),
    schema='oneview'
    )
    op.create_table('credentialing_order',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('customer', sa.Integer(), nullable=False),
    sa.Column('product', sa.Integer(), nullable=False),
    sa.Column('number', sa.String(), nullable=False),
    sa.Column('medical_education_number', sa.String(), nullable=False),
    sa.Column('date', sa.String(), nullable=False),
    sa.Column('quantity', sa.String(), nullable=False),
    sa.Column('unique_physician_identification_number', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['customer'], ['oneview.credentialing_customer.id'], name=op.f('fk_credentialing_order_customer_credentialing_customer')),
    sa.ForeignKeyConstraint(['medical_education_number'], ['oneview.physician.medical_education_number'], name=op.f('fk_credentialing_order_medical_education_number_physician')),
    sa.ForeignKeyConstraint(['product'], ['oneview.credentialing_product.id'], name=op.f('fk_credentialing_order_product_credentialing_product')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_credentialing_order')),
    schema='oneview'
    )
    op.create_table('provider',
    sa.Column('medical_education_number', sa.String(), nullable=False),
    sa.Column('iqvia_provider_id', sa.String(), nullable=True),
    sa.Column('first_name', sa.String(), nullable=True),
    sa.Column('middle_name', sa.String(), nullable=True),
    sa.Column('last_name', sa.String(), nullable=True),
    sa.Column('suffix', sa.String(), nullable=True),
    sa.Column('designation', sa.String(), nullable=True),
    sa.Column('gender', sa.String(), nullable=True),
    sa.Column('role', sa.String(), nullable=True),
    sa.Column('primary_specialty', sa.String(), nullable=True),
    sa.Column('secondary_specialty', sa.String(), nullable=True),
    sa.Column('tertiary_specialty', sa.String(), nullable=True),
    sa.Column('primary_profession', sa.String(), nullable=True),
    sa.Column('primary_profession_description', sa.String(), nullable=True),
    sa.Column('unique_physician_identification_number', sa.String(), nullable=True),
    sa.Column('national_provider_identifier', sa.String(), nullable=True),
    sa.Column('status_description', sa.String(), nullable=True),
    sa.Column('batch_business_date', sa.Date(), nullable=True),
    sa.ForeignKeyConstraint(['batch_business_date'], ['oneview.iqvia_update.date'], name=op.f('fk_provider_batch_business_date_iqvia_update')),
    sa.ForeignKeyConstraint(['medical_education_number'], ['oneview.physician.medical_education_number'], name=op.f('fk_provider_medical_education_number_physician')),
    sa.PrimaryKeyConstraint('medical_education_number', name=op.f('pk_provider')),
    schema='oneview'
    )
    op.create_table('provider_affiliation',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('business', sa.String(), nullable=True),
    sa.Column('medical_education_number', sa.String(), nullable=True),
    sa.Column('type', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('primary', sa.String(), nullable=True),
    sa.Column('rank', sa.String(), nullable=True),
    sa.Column('group', sa.String(), nullable=True),
    sa.Column('group_description', sa.String(), nullable=True),
    sa.Column('batch_business_date', sa.Date(), nullable=True),
    sa.ForeignKeyConstraint(['batch_business_date'], ['oneview.iqvia_update.date'], name=op.f('fk_provider_affiliation_batch_business_date_iqvia_update')),
    sa.ForeignKeyConstraint(['business'], ['oneview.business.id'], name=op.f('fk_provider_affiliation_business_business')),
    sa.ForeignKeyConstraint(['medical_education_number'], ['oneview.physician.medical_education_number'], name=op.f('fk_provider_affiliation_medical_education_number_physician')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_provider_affiliation')),
    schema='oneview'
    )
    op.create_table('residency_program_personnel_member',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('program', sa.String(), nullable=False),
    sa.Column('first_name', sa.String(), nullable=True),
    sa.Column('middle_name', sa.String(), nullable=True),
    sa.Column('last_name', sa.String(), nullable=True),
    sa.Column('suffix_name', sa.String(), nullable=True),
    sa.Column('degree_1', sa.String(), nullable=True),
    sa.Column('degree_2', sa.String(), nullable=True),
    sa.Column('degree_3', sa.String(), nullable=True),
    sa.Column('last_update_date', sa.Date(), nullable=True),
    sa.ForeignKeyConstraint(['program'], ['oneview.residency_program.id'], name=op.f('fk_residency_program_personnel_member_program_residency_program')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_residency_program_personnel_member')),
    schema='oneview'
    )
    op.create_table('subsidiary_business',
    sa.Column('subsidiary', sa.String(), nullable=False),
    sa.Column('owner', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['owner'], ['oneview.business.id'], name=op.f('fk_subsidiary_business_owner_business')),
    sa.ForeignKeyConstraint(['subsidiary'], ['oneview.business.id'], name=op.f('fk_subsidiary_business_subsidiary_business')),
    sa.PrimaryKeyConstraint('subsidiary', name=op.f('pk_subsidiary_business')),
    schema='oneview'
    )
    op.create_table('residency_program_physician',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('personnel_member', sa.String(), nullable=False),
    sa.Column('medical_education_number', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['medical_education_number'], ['oneview.physician.medical_education_number'], name=op.f('fk_residency_program_physician_medical_education_number_physician')),
    sa.ForeignKeyConstraint(['personnel_member'], ['oneview.residency_program_personnel_member.id'], name=op.f('fk_residency_program_physician_personnel_member_residency_program_personnel_member')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_residency_program_physician')),
    sa.UniqueConstraint('medical_education_number', name=op.f('uq_residency_program_physician_medical_education_number')),
    sa.UniqueConstraint('personnel_member', name=op.f('uq_residency_program_physician_personnel_member')),
    schema='oneview'
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('residency_program_physician', schema='oneview')
    op.drop_table('subsidiary_business', schema='oneview')
    op.drop_table('residency_program_personnel_member', schema='oneview')
    op.drop_table('provider_affiliation', schema='oneview')
    op.drop_table('provider', schema='oneview')
    op.drop_table('credentialing_order', schema='oneview')
    op.drop_table('credentialing_customer_business', schema='oneview')
    op.drop_table('corporate_parent_business', schema='oneview')
    op.drop_table('zip_code_core_based_statistical_areas', schema='oneview')
    op.drop_table('residency_program', schema='oneview')
    op.drop_table('physician', schema='oneview')
    op.drop_table('credentialing_customer_institution', schema='oneview')
    op.drop_table('business', schema='oneview')
    op.drop_table('zip_code', schema='oneview')
    op.drop_table('type_of_practice', schema='oneview')
    op.drop_table('specialty', schema='oneview')
    op.drop_table('residency_program_institution', schema='oneview')
    op.drop_table('present_employment', schema='oneview')
    op.drop_table('metropolitan_statistical_area', schema='oneview')
    op.drop_table('major_professional_activity', schema='oneview')
    op.drop_table('iqvia_update', schema='oneview')
    op.drop_table('historical_resident', schema='oneview')
    op.drop_table('federal_information_processing_standard_county', schema='oneview')
    op.drop_table('credentialing_product', schema='oneview')
    op.drop_table('credentialing_customer', schema='oneview')
    op.drop_table('county', schema='oneview')
    op.drop_table('core_based_statistical_area_melissa', schema='oneview')
    op.drop_table('core_based_statistical_area', schema='oneview')
    op.drop_table('census', schema='oneview')
    op.drop_table('area_code', schema='oneview')
    # ### end Alembic commands ###
