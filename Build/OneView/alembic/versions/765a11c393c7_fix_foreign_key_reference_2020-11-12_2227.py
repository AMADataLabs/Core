"""Fix foreign key reference.

Revision ID: 765a11c393c7
Revises: aecfabc7ec63
Create Date: 2020-11-12 22:27:54.855113+00:00

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '765a11c393c7'
down_revision = 'aecfabc7ec63'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('core_based_statistical_area',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('type', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_core_based_statistical_area')),
    schema='oneview'
    )
    op.create_table('federal_information_processing_standard_county',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_federal_information_processing_standard_county')),
    schema='oneview'
    )
    op.create_table('major_professional_activity',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_major_professional_activity')),
    schema='oneview'
    )
    op.create_table('present_employment',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_present_employment')),
    schema='oneview'
    )
    op.create_table('specialty',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_specialty')),
    schema='oneview'
    )
    op.create_table('type_of_practice',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_type_of_practice')),
    schema='oneview'
    )
    op.create_table('residency_program',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('web_address', sa.String(), nullable=False),
    sa.Column('old_name', sa.String(), nullable=False),
    sa.Column('address_type', sa.String(), nullable=False),
    sa.Column('address_1', sa.String(), nullable=False),
    sa.Column('address_2', sa.String(), nullable=False),
    sa.Column('address_3', sa.String(), nullable=False),
    sa.Column('city', sa.String(), nullable=False),
    sa.Column('state', sa.String(), nullable=False),
    sa.Column('zipcode', sa.String(), nullable=False),
    sa.Column('institution', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['institution'], ['oneview.residency_program_institution.id'], name=op.f('fk_residency_program_institution_residency_program_institution')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_residency_program')),
    schema='oneview'
    )
    op.create_table('physician_race_ethnicity',
    sa.Column('medical_education_number', sa.String(), nullable=False),
    sa.Column('race_ethnicity', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['medical_education_number'], ['oneview.physician.medical_education_number'], name=op.f('fk_physician_race_ethnicity_medical_education_number_physician')),
    sa.PrimaryKeyConstraint('medical_education_number', name=op.f('pk_physician_race_ethnicity')),
    schema='oneview'
    )
    op.drop_constraint('fk_residency_program_personnel_member_program_residency_bb69', 'residency_program_personnel_member', schema='oneview', type_='foreignkey')
    op.drop_table('residency_program_addresses', schema='oneview')
    op.drop_constraint('fk_physician_ethnicity_ethnicity_ethnicity', 'physician_ethnicity', schema='oneview', type_='foreignkey')
    op.drop_table('ethnicity', schema='oneview')
    op.drop_table('physician_ethnicity', schema='oneview')
    op.add_column('physician', sa.Column('type_of_practice', sa.String(), nullable=True), schema='oneview')
    op.create_foreign_key(op.f('fk_physician_type_of_practice_type_of_practice'), 'physician', 'type_of_practice', ['type_of_practice'], ['id'], source_schema='oneview', referent_schema='oneview')
    op.create_foreign_key(op.f('fk_physician_present_employment_present_employment'), 'physician', 'present_employment', ['present_employment'], ['id'], source_schema='oneview', referent_schema='oneview')
    op.create_foreign_key(op.f('fk_physician_core_based_statistical_area_core_based_statistical_area'), 'physician', 'core_based_statistical_area', ['core_based_statistical_area'], ['id'], source_schema='oneview', referent_schema='oneview')
    op.create_foreign_key(op.f('fk_physician_secondary_specialty_specialty'), 'physician', 'specialty', ['secondary_specialty'], ['id'], source_schema='oneview', referent_schema='oneview')
    op.create_foreign_key(op.f('fk_physician_major_professional_activity_major_professional_activity'), 'physician', 'major_professional_activity', ['major_professional_activity'], ['id'], source_schema='oneview', referent_schema='oneview')
    op.create_foreign_key(op.f('fk_physician_federal_information_processing_standard_county_federal_information_processing_standard_county'), 'physician', 'federal_information_processing_standard_county', ['federal_information_processing_standard_county'], ['id'], source_schema='oneview', referent_schema='oneview')
    op.create_foreign_key(op.f('fk_physician_primary_specialty_specialty'), 'physician', 'specialty', ['primary_specialty'], ['id'], source_schema='oneview', referent_schema='oneview')
    op.drop_column('physician', 'type_of_practice_code', schema='oneview')
    op.create_foreign_key(op.f('fk_residency_program_personnel_member_program_residency_program'), 'residency_program_personnel_member', 'residency_program', ['program'], ['id'], source_schema='oneview', referent_schema='oneview')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(op.f('fk_residency_program_personnel_member_program_residency_program'), 'residency_program_personnel_member', schema='oneview', type_='foreignkey')
    op.create_foreign_key('fk_residency_program_personnel_member_program_residency_bb69', 'residency_program_personnel_member', 'residency_program_addresses', ['program'], ['id'], source_schema='oneview', referent_schema='oneview')
    op.add_column('physician', sa.Column('type_of_practice_code', sa.VARCHAR(), autoincrement=False, nullable=True), schema='oneview')
    op.drop_constraint(op.f('fk_physician_primary_specialty_specialty'), 'physician', schema='oneview', type_='foreignkey')
    op.drop_constraint(op.f('fk_physician_federal_information_processing_standard_county_federal_information_processing_standard_county'), 'physician', schema='oneview', type_='foreignkey')
    op.drop_constraint(op.f('fk_physician_major_professional_activity_major_professional_activity'), 'physician', schema='oneview', type_='foreignkey')
    op.drop_constraint(op.f('fk_physician_secondary_specialty_specialty'), 'physician', schema='oneview', type_='foreignkey')
    op.drop_constraint(op.f('fk_physician_core_based_statistical_area_core_based_statistical_area'), 'physician', schema='oneview', type_='foreignkey')
    op.drop_constraint(op.f('fk_physician_present_employment_present_employment'), 'physician', schema='oneview', type_='foreignkey')
    op.drop_constraint(op.f('fk_physician_type_of_practice_type_of_practice'), 'physician', schema='oneview', type_='foreignkey')
    op.drop_column('physician', 'type_of_practice', schema='oneview')
    op.create_table('physician_ethnicity',
    sa.Column('medical_education_number', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('ethnicity', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['ethnicity'], ['oneview.ethnicity.id'], name='fk_physician_ethnicity_ethnicity_ethnicity'),
    sa.ForeignKeyConstraint(['medical_education_number'], ['oneview.physician.medical_education_number'], name='fk_physician_ethnicity_medical_education_number_physician'),
    sa.PrimaryKeyConstraint('medical_education_number', name='pk_physician_ethnicity'),
    schema='oneview'
    )
    op.create_table('ethnicity',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('oneview.ethnicity_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='pk_ethnicity'),
    sa.UniqueConstraint('id', name='uq_ethnicity_id'),
    schema='oneview'
    )
    op.create_table('residency_program_addresses',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('oneview.residency_program_addresses_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('web_address', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('old_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('address_type', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('city', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('state', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('zipcode', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('address_1', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('address_2', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('address_3', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('institution', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['institution'], ['oneview.residency_program_institution.id'], name='fk_residency_program_addresses_institution_residency_pr_f052'),
    sa.PrimaryKeyConstraint('id', name='pk_residency_program_addresses'),
    schema='oneview'
    )
    op.drop_table('physician_race_ethnicity', schema='oneview')
    op.drop_table('residency_program', schema='oneview')
    op.drop_table('type_of_practice', schema='oneview')
    op.drop_table('specialty', schema='oneview')
    op.drop_table('present_employment', schema='oneview')
    op.drop_table('major_professional_activity', schema='oneview')
    op.drop_table('federal_information_processing_standard_county', schema='oneview')
    op.drop_table('core_based_statistical_area', schema='oneview')
    # ### end Alembic commands ###
