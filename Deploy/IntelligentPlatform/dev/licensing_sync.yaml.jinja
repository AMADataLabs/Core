---
LICENSING_SYNC:
    GLOBAL:
        ACCOUNT: '191296302136'
        ENVIRONMENT: dev

        PLATFORM_DB_BACKEND: mysql+pymysql
        PLATFORM_DB_HOST: pe-dev-aurora-cluster.cluster-cwp4vd8mllvz.us-east-1.rds.amazonaws.com
        PLATFORM_DB_PORT: '3306'
        PLATFORM_DB_USERNAME: platform
        PLATFORM_DB_PASSWORD: '{{platform_db_password}}'
        PLATFORM_DB_NAME: frictionlesslicensing

        VISTEX_DB_BACKEND: mssql+pymssql
        VISTEX_DB_HOST: rdbt5681.ad.ama-assn.org
        VISTEX_DB_PORT: '1436'
        VISTEX_DB_USERNAME: dlabs_read
        VISTEX_DB_PASSWORD: '{{vistex_db_password}}'
        VISTEX_DB_NAME: LicenseMaestro_CPT

        S3_BASE_PATH: AMA/Licensing

        S3_CACHE_CLASS: datalabs.etl.dag.cache.s3.S3TaskDataCache

        S3_INGESTED_DATA_BUCKET: ama-${ENVIRONMENT}-datalake-ingest-us-east-1
        S3_PROCESSED_DATA_BUCKET: ama-${ENVIRONMENT}-datalake-process-us-east-1

    DAG:
        DAG_CLASS: datalabs.etl.dag.intelligent_platform.licensing.sync.DAG
        DAG_EXECUTOR_CLASS: datalabs.etl.dag.execute.awslambda.LambdaDAGExecutorTask
        DAG_STATE:
            CLASS: datalabs.etl.dag.state.dynamodb.DAGState
            LOCK_TABLE: DataLake-scheduler-locks-${ENVIRONMENT}
            STATE_TABLE: DataLake-dag-state-${ENVIRONMENT}
        DAG_TOPIC_ARN: arn:aws:sns:us-east-1:${ACCOUNT}:DataLake-${ENVIRONMENT}-DAGProcessor
        ENVIRONMENT: ${ENVIRONMENT}
        LAMBDA_FUNCTION: AIP-${ENVIRONMENT}-LicensingDAG
        STATUS_NOTIFICATION_WEB_HOOK: https://amatoday.webhook.office.com/webhookb2/5cf63a5c-89ba-4724-b44f-8643269bae92@11fe67f6-fd54-4981-925f-94c36ed7b086/IncomingWebhook/1d0f20d047d042d68d01a8d855787009/b9b792dd-3637-4256-8a95-72d5d956f908
        TASK_EXECUTOR_CLASS: datalabs.etl.dag.execute.awslambda.LambdaTaskExecutorTask
        TASK_TOPIC_ARN: arn:aws:sns:us-east-1:${ACCOUNT}:DataLake-${ENVIRONMENT}-TaskProcessor

    CREATE_ACTIVE_ARTICLES_TABLE:
        CACHE_BASE_PATH: ${S3_BASE_PATH}
        CACHE_CLASS: ${S3_CACHE_CLASS}

        CACHE_INPUT_BUCKET: ${S3_INGESTED_DATA_BUCKET}
        CACHE_INPUT_FILES: articles.csv

        CACHE_OUTPUT_BUCKET: ${S3_PROCESSED_DATA_BUCKET}
        CACHE_OUTPUT_FILES: frictionless_licensing_articles.csv

    CREATE_ORGANIZATIONS_TABLE:
        CACHE_BASE_PATH: ${S3_BASE_PATH}
        CACHE_CLASS: ${S3_CACHE_CLASS}

        CACHE_INPUT_BUCKET: ${S3_INGESTED_DATA_BUCKET}
        CACHE_INPUT_FILES: licensed_organizations.csv,active_contract_organizations.csv,contract_rights_organizations.csv

        CACHE_OUTPUT_BUCKET: ${S3_PROCESSED_DATA_BUCKET}
        CACHE_OUTPUT_FILES: frictionless_licensing_organizations.csv

    EXTRACT_ACTIVE_ARTICLES:
        DATABASE_BACKEND: ${VISTEX_DB_BACKEND}
        DATABASE_HOST: ${VISTEX_DB_HOST}
        DATABASE_NAME: ${VISTEX_DB_NAME}
        DATABASE_PASSWORD: ${VISTEX_DB_PASSWORD}
        DATABASE_PORT: ${VISTEX_DB_PORT}
        DATABASE_USERNAME: ${VISTEX_DB_USERNAME}
        SQL: '
            SELECT DISTINCT description, article_key
            FROM v_ri_article
            ORDER BY description ASC
        '

        CACHE_OUTPUT_CLASS: ${S3_CACHE_CLASS}
        CACHE_OUTPUT_BASE_PATH: ${S3_BASE_PATH}
        CACHE_OUTPUT_BUCKET: ${S3_INGESTED_DATA_BUCKET}
        CACHE_OUTPUT_FILES: articles.csv

    EXTRACT_ACTIVE_CONTRACT_ORGANIZATIONS:
        DATABASE_BACKEND: ${VISTEX_DB_BACKEND}
        DATABASE_HOST: ${VISTEX_DB_HOST}
        DATABASE_NAME: ${VISTEX_DB_NAME}
        DATABASE_PASSWORD: ${VISTEX_DB_PASSWORD}
        DATABASE_PORT: ${VISTEX_DB_PORT}
        DATABASE_USERNAME: ${VISTEX_DB_USERNAME}
        SQL: "
            SELECT
                LTRIM(RTRIM(T1.licensee)) AS Organization,
                T3.id as licensee_id
            FROM
                v_cm_contracts T1
                    JOIN cm_contract T2
                    ON T1.contract_key=t2.contract_key
                        JOIN V_MP_COMPANIES T3
                        ON t1.licensee_company_key = T3.COMPANY_ID
                                LEFT JOIN (Select * from cm_contract_milestone where description like 'Effective Date') MILESTONE on t1.contract_key = MILESTONE.contract_key
                                LEFT JOIN (Select key_value, text_value from v_ts_custom_fields_details where customfield_id = 75) WEB ON T1.contract_key = WEB.key_value
                                LEFT JOIN (Select key_value, text_value from v_ts_custom_fields_details where customfield_id = 76) Version ON T1.contract_key = Version.key_value
                                LEFT JOIN (Select key_value, text_value from v_ts_custom_fields_details where customfield_id = 77) Zendesk ON T1.contract_key = Zendesk.key_value

            WHERE
                T1.description NOT Like '%AFFINITY%' and
                T1.licensee <> '%ACME%' and
                T1.account_exec Not In ('David Young', 'Brian Eaggleston') and
                T1.properties like '%CPT%'
            ORDER BY Organization ASC
        "

        CACHE_OUTPUT_CLASS: ${S3_CACHE_CLASS}
        CACHE_OUTPUT_BASE_PATH: ${S3_BASE_PATH}
        CACHE_OUTPUT_BUCKET: ${S3_INGESTED_DATA_BUCKET}
        CACHE_OUTPUT_FILES: active_contract_organizations.csv

    EXTRACT_CONTRACT_RIGHTS_ORGANIZATIONS:
        DATABASE_BACKEND: ${VISTEX_DB_BACKEND}
        DATABASE_HOST: ${VISTEX_DB_HOST}
        DATABASE_NAME: ${VISTEX_DB_NAME}
        DATABASE_PASSWORD: ${VISTEX_DB_PASSWORD}
        DATABASE_PORT: ${VISTEX_DB_PORT}
        DATABASE_USERNAME: ${VISTEX_DB_USERNAME}
        SQL: "
            SELECT DISTINCT LICENSEE AS Organization FROM (
                SELECT DISTINCT
                    T3.ID                       AS  CONTRACTID,
                    LTRIM(RTRIM(T3.licensee))   AS  LICENSEE,
                CASE
                    WHEN T3.description like '%Dist%'
                        THEN 'CPT Distribution License Agreement'
                    WHEN T3.description like '%Internal%'
                        THEN 'Internal Use License Agreement'
                    WHEN T3.description in ( '<50001 CL Health Plans', 'Pilot Test Agreement of CPT in a Coordinated Care Organization', 'Standalone Settlement Agreement')
                        THEN 'Internal Use License Agreement'
                    ELSE T3.description
                END                         AS Contract_TYPE,
                T3.contract_status          AS  CONTRACT_STATUS,
                T3.expiration_date          AS  EXPIRATION_DATE,
                PROPERTY.description        AS  PROPERTY,
                PROPERTY.property_key       AS  PROPERTY_KEY,
                ARTICLE.description         AS  ARTICLE,
                ARTICLE.article_key         AS  ARTICLE_KEY,
                CHANNEL.Parent_description  AS PARENT_CHANNEL,
                CHANNEL.description         AS  CHANNEL,
                CHANNEL.channel_key         AS  CHANNEL_KEY
                FROM
                    cm_model_incl T1
                    join cm_model t2 on t1.model_key = t2.model_key
                JOIN V_CM_CONTRACTS T3 ON T2.contract_key = T3.contract_key
                JOIN (
                    SELECT DISTINCT
                        T1.model_key,
                        T2.property_key
                    from
                        cm_model_incl T1
                            LEFT JOIN (
                            select
                                LEV.model_key as model_key,
                                LEV.property_key as PROPERTY_KEY
                            from cm_model_incl LEV
                            where LEV.property_key is not null
                        ) T2
                    ON T1.model_key = t2.model_key ) PROPS
                    ON T1.model_key = PROPS.model_key

                LEFT JOIN
                    v_ri_property Property
                        ON Property.property_key = PROPS.property_key
                JOIN (
                    SELECT DISTINCT
                        T1.model_key,
                        T2.ARTICLE_KEY
                    from
                        cm_model_incl T1
                            LEFT JOIN (
                            select
                                EXO.model_key as model_key,
                                EXO.article_key as ARTICLE_KEY
                from
                    cm_model_incl EXO
                where
                    EXO.article_key is not null
                ) T2 ON T1.model_key = t2.model_key
                ) ARTS ON T1.model_key = ARTS.model_key
                LEFT JOIN v_ri_article ARTICLE ON ARTICLE.article_key = ARTS.ARTICLE_KEY
                JOIN (
                    SELECT
                        DISTINCT T1.model_key,
                        T2.CHANNEL_KEY
                    from
                        cm_model_incl T1
                        LEFT JOIN (
                            select
                                gen.model_key as model_key,
                                gen.channel_key as CHANNEL_KEY
                            from
                                cm_model_incl gen
                            where
                                channel_key is not null
                        ) T2 ON T1.model_key = t2.model_key
                ) CHANS ON T1.model_key = CHANS.model_key
                LEFT JOIN v_ri_channel CHANNEL ON CHANNEL.channel_key = CHANS.CHANNEL_KEY
                WHERE
                    T3.description NOT Like '%AFFINITY%'
                    and T3.licensee <> '%ACME%'
                    and T3.account_exec Not In ('David Young', 'Brian Eaggleston')
                    AND T3.properties like '%CPT%'
            ) AS contract_rights
            ORDER BY Organization ASC
        "

        CACHE_OUTPUT_CLASS: ${S3_CACHE_CLASS}
        CACHE_OUTPUT_BASE_PATH: ${S3_BASE_PATH}
        CACHE_OUTPUT_BUCKET: ${S3_INGESTED_DATA_BUCKET}
        CACHE_OUTPUT_FILES: contract_rights_organizations.csv

    EXTRACT_LICENSED_ORGANIZATIONS:
        DATABASE_BACKEND: ${VISTEX_DB_BACKEND}
        DATABASE_HOST: ${VISTEX_DB_HOST}
        DATABASE_NAME: ${VISTEX_DB_NAME}
        DATABASE_PASSWORD: ${VISTEX_DB_PASSWORD}
        DATABASE_PORT: ${VISTEX_DB_PORT}
        DATABASE_USERNAME: ${VISTEX_DB_USERNAME}
        SQL: "
            SELECT DISTINCT
                IIF (
                    T2.licensee IS NULL,
                    T3.OrganizationName,
                    T2.licensee
                ) AS Organization
            FROM
                AMA_LicensePortal.dbo.UploadReport T1
                    JOIN LicenseMaestro_CPT.dbo.v_cm_contracts T2
                    ON T1.ReportedContractID = T2.id
                        JOIN AMA_LicensePortal.dbo.UploadReportDetail T3
                        ON T1.UploadReportID = T3.UploadReportID
            WHERE T3.OrganizationName like '%%' and YEAR(T1.ReportedPeriodEndDate) = 2020

            ORDER BY Organization ASC
        "

        CACHE_OUTPUT_CLASS: ${S3_CACHE_CLASS}
        CACHE_OUTPUT_BASE_PATH: ${S3_BASE_PATH}
        CACHE_OUTPUT_BUCKET: ${S3_INGESTED_DATA_BUCKET}
        CACHE_OUTPUT_FILES: licensed_organizations.csv

    LOAD_ACTIVE_ARTICLES_TABLE:
        CACHE_INPUT_CLASS: ${S3_CACHE_CLASS}
        CACHE_INPUT_BASE_PATH: ${S3_BASE_PATH}
        CACHE_INPUT_BUCKET: ${S3_PROCESSED_DATA_BUCKET}
        CACHE_INPUT_FILES: frictionless_licensing_articles.csv

        DATABASE_BACKEND: ${PLATFORM_DB_BACKEND}
        DATABASE_HOST: ${PLATFORM_DB_HOST}
        DATABASE_NAME: ${PLATFORM_DB_NAME}
        DATABASE_PASSWORD: ${PLATFORM_DB_PASSWORD}
        DATABASE_PORT: ${PLATFORM_DB_PORT}
        DATABASE_USERNAME: ${PLATFORM_DB_USERNAME}
        MODEL_CLASSES: datalabs.model.intelligent_platform.licensing.Article
        IGNORE_COLUMNS: id

    LOAD_ORGANIZATIONS_TABLE:
        CACHE_INPUT_CLASS: ${S3_CACHE_CLASS}
        CACHE_INPUT_BASE_PATH: ${S3_BASE_PATH}
        CACHE_INPUT_BUCKET: ${S3_PROCESSED_DATA_BUCKET}
        CACHE_INPUT_FILES: frictionless_licensing_organizations.csv

        DATABASE_BACKEND: ${PLATFORM_DB_BACKEND}
        DATABASE_HOST: ${PLATFORM_DB_HOST}
        DATABASE_NAME: ${PLATFORM_DB_NAME}
        DATABASE_PASSWORD: ${PLATFORM_DB_PASSWORD}
        DATABASE_PORT: ${PLATFORM_DB_PORT}
        DATABASE_USERNAME: ${PLATFORM_DB_USERNAME}
        MODEL_CLASSES: datalabs.model.intelligent_platform.licensing.Organization
        IGNORE_COLUMNS: id

    EXTRACT_LICENSEE_ID:
        DATABASE_BACKEND: ${VISTEX_DB_BACKEND}
        DATABASE_HOST: ${VISTEX_DB_HOST}
        DATABASE_NAME: ${VISTEX_DB_NAME}
        DATABASE_PASSWORD: ${VISTEX_DB_PASSWORD}
        DATABASE_PORT: ${VISTEX_DB_PORT}
        DATABASE_USERNAME: ${VISTEX_DB_USERNAME}
        SQL: "
            SELECT DISTINCT
                LTRIM(RTRIM(T1.licensee))   AS name,
                T3.id                       AS prod_licensee_id,
                T3.id                       AS stag_licensee_id,
                T1.id                       AS [ContractID],
                T1.account_exec,
                MILESTONE.milestone_date    AS [Effective_Date],
                CONVERT(DATE,T1.start_date) AS [Contract_Start_Date],
                CONVERT(DATE,T1.expiration_date)   AS [Contract_Expiration_Date],
                CONVERT(DATE,T1.sell_off_end_date) AS [Contract_Sell_Off_Date],
                T1.contract_status,
                T1.create_date              AS [Contract_Created_On],
                CASE
                WHEN T1.description LIKE 'Frictionless%' THEN T1.description
                WHEN T1.description LIKE 'Internal%' THEN 'Internal Use License Agreement'
                WHEN T1.description LIKE 'Dist%' THEN 'CPT Distribution License Agreement'
                ELSE T1.description
                End                         AS [Contract Type],
                CASE
                WHEN T1.description LIKE 'Development License' THEN 0
                ELSE 1
                END                         AS [category_id],
                6                           AS [type_id],
                T4.CITY                     AS [City],
                ST.description              AS [State],
                T4.POSTCODE                 AS [Zip],
                CO.description              AS [Country],
                Users.Username              ,
                CONCAT_WS(' ', Users.FirstName, Users.LastName) AS main_contact,
                Users.Email
            FROM
                v_cm_contracts                      T1
                    JOIN cm_contract                T2
                    ON T1.contract_key=t2.contract_key
                    JOIN V_MP_COMPANIES             T3
                    ON t1.licensee_company_key = T3.COMPANY_ID
                    LEFT JOIN (SELECT
                                contract_key,
                                description,
                                milestone_date
                               FROM
                                cm_contract_milestone
                               WHERE
                                description LIKE 'Effective Date'
                               )                    MILESTONE
                    ON t1.contract_key = MILESTONE.contract_key
                    LEFT JOIN MP_ADDRESS            T4
                    ON T3.COMPANY_ID = T4.COMPANY_ID-- and T4.is_primary_office = 1
                    LEFT JOIN su_type_code          [ST]
                    ON T4.state_code = [ST].type_code_key
                    LEFT JOIN su_type_code          [CO]
                    ON T4.country_code = [CO].type_code_key
                    LEFT JOIN (SELECT
                                Usr.UserID,
                                row_number() over (
                                    PARTITION BY UsrRole.ContractID
                                    ORDER BY
                                    Usr.UserID ASC)
                                AS [ROW] ,
                                Usr.username,
                                Usr.FirstName,
                                Usr.LastName,
                                Usr.Email,
                                UsrRole.ContractID
                               FROM
                               AMA_LicensePortal.dbo.Users Usr
                               JOIN AMA_LicensePortal.dbo.UserRoles UsrRole
                               ON Usr.UserID = UsrRole.UserID AND UsrRole.ContractAdmin = 1
                               )                    Users
                    ON T1.id = Users.ContractID AND [Row] = 1
            WHERE
                T1.description NOT LIKE '%AFFINITY%' AND
                T1.licensee <> '%ACME%' AND
                T1.account_exec NOT IN ('David Young', 'Brian Eaggleston') AND
                T1.properties LIKE '%CPT%'
            ORDER BY name ASC OFFSET {index} ROWS FETCH NEXT {count} ROWS ONLY;
        "

        CACHE_OUTPUT_CLASS: ${S3_CACHE_CLASS}
        CACHE_OUTPUT_BASE_PATH: ${S3_BASE_PATH}
        CACHE_OUTPUT_BUCKET: ${S3_INGESTED_DATA_BUCKET}
        CACHE_OUTPUT_FILES: organization_licensee_id.csv

    EXTRACT_EXISTING_ORGANIZATIONS:
        DATABASE_BACKEND: ${PLATFORM_DB_BACKEND}
        DATABASE_HOST: ${PLATFORM_DB_HOST}
        DATABASE_NAME: ${PLATFORM_DB_NAME}
        DATABASE_PASSWORD: ${PLATFORM_DB_PASSWORD}
        DATABASE_PORT: ${PLATFORM_DB_PORT}
        DATABASE_USERNAME: ${PLATFORM_DB_USERNAME}

        SQL: "
            SELECT 
                id,
                name,
                type_id,
                category_id,
                addr1,
                addr2,
                addr3,
                city,
                state,
                zip,
                phone,
                industry,
                about,
                main_contact,
                org_size,
                country,
                source_id,
                default_org,
                created_on,
                updated_on,
                row_id,
                prod_licensee_id,
                stag_licensee_id
            FROM
                Organization
            ORDER BY name ASC LIMIT {index}, {count}
        "

        CACHE_OUTPUT_CLASS: ${S3_CACHE_CLASS}
        CACHE_OUTPUT_BASE_PATH: ${S3_BASE_PATH}
        CACHE_OUTPUT_BUCKET: ${S3_INGESTED_DATA_BUCKET}
        CACHE_OUTPUT_FILES: existing_organizations.csv

    MERGE_ORGANIZATIONS:
        CACHE_BASE_PATH: ${S3_BASE_PATH}
        CACHE_CLASS: ${S3_CACHE_CLASS}

        CACHE_INPUT_BUCKET: ${S3_INGESTED_DATA_BUCKET}
        CACHE_INPUT_FILES: existing_organizations.csv,organization_licensee_id.csv

        CACHE_OUTPUT_BUCKET: ${S3_PROCESSED_DATA_BUCKET}
        CACHE_OUTPUT_FILES: merged_organizations.csv

    LOAD_LICENSEE_ID:
        CACHE_INPUT_CLASS: ${S3_CACHE_CLASS}
        CACHE_INPUT_BASE_PATH: ${S3_BASE_PATH}
        CACHE_INPUT_BUCKET: ${S3_PROCESSED_DATA_BUCKET}
        CACHE_INPUT_FILES: merged_organizations.csv

        DATABASE_BACKEND: ${PLATFORM_DB_BACKEND}
        DATABASE_HOST: ${PLATFORM_DB_HOST}
        DATABASE_NAME: ${PLATFORM_DB_NAME}
        DATABASE_PASSWORD: ${PLATFORM_DB_PASSWORD}
        DATABASE_PORT: ${PLATFORM_DB_PORT}
        DATABASE_USERNAME: ${PLATFORM_DB_USERNAME}
        MODEL_CLASSES: datalabs.model.intelligent_platform.licensing.UserManagementOrganization
        IGNORE_COLUMNS: id
