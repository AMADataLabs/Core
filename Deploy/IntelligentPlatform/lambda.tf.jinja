

module "webapp_{{SNAKE_CASE_NAME}}_lambda" {
  source  = "app.terraform.io/AMA/lambda/aws"
  version = "2.2.0"
  function_name             = "AIP-${local.environment}-{{CAMEL_CASE_NAME}}"
  lambda_name               = "AIP-${local.environment}-{{CAMEL_CASE_NAME}}"
  layers                    = [aws_lambda_layer_version.authpython.arn]
  create_alias              = true
  alias_name                = local.environment
  create_lambda_permission  = true
  api_arn                   = module.api-gw.api_execution_arn
  use_source_hash           = false
  description               = "AMA Intelligent Platform Backend Function - {{HUMAN_READABLE_NAME}}"
  s3_lambda_bucket          = local.s3_lambda_bucket
  s3_lambda_key             = "{{CAMEL_CASE_NAME}}.zip"
  handler                   = "lambda_function.lambda_handler"
  runtime                   = "python3.8"
  memory_size               = 128
  timeout                   = {{TIMEOUT}}
  tracing_config            = { mode = "Active" }

  vpc_config = {
    subnet_ids              = data.terraform_remote_state.infrastructure.outputs.subnet_ids
    security_group_ids      = [module.lambda_sg.security_group_id]
  }

  lambda_policy_vars = {
    account     = local.account
    environment = local.environment
    region      = local.region
  }

  tag_name                          = "${upper(local.project_id)}-${upper(local.environment)}-{{CAMEL_CASE_NAME}}"
  tag_environment                   = local.environment
  tag_contact                       = local.contact
  tag_budgetcode                    = local.budget_code
  tag_owner                         = local.owner
  tag_projectname                   = local.project
  tag_systemtier                    = "0"
  tag_drtier                        = "0"
  tag_dataclassification            = "N/A"
  tag_notes                         = "N/A"
  tag_eol                           = "N/A"
  tag_maintwindow                   = "N/A"
}
