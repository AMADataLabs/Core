---
LICENSING_REMINDERS:
    GLOBAL:
        ACCOUNT: '194221139997'
        ENVIRONMENT: tst

        PLATFORM_DB_BACKEND: mysql+pymysql
        PLATFORM_DB_HOST: pe-tst-aurora-cluster.cluster-cvo5zwdixjdr.us-east-1.rds.amazonaws.com
        PLATFORM_DB_PORT: '3306'
        PLATFORM_DB_USERNAME: platform
        PLATFORM_DB_PASSWORD: '{{platform_db_password}}'
        PLATFORM_DB_NAME: usermgmt

        PLATFORM_DOMAIN: platform-${ENVIRONMENT}

        S3_BASE_PATH: AMA/Licensing

        S3_CACHE_CLASS: datalabs.etl.dag.cache.s3.S3TaskDataCache

        S3_INGESTED_DATA_BUCKET: ama-${ENVIRONMENT}-datalake-ingest-us-east-1
        S3_PROCESSED_DATA_BUCKET: ama-${ENVIRONMENT}-datalake-process-us-east-1
    DAG:
        DAG_CLASS: datalabs.etl.dag.intelligent_platform.licensing.reminders.DAG
        DAG_EXECUTOR_CLASS: datalabs.etl.dag.execute.awslambda.LambdaDAGExecutorTask
        DAG_STATE:
            CLASS: datalabs.etl.dag.state.dynamodb.DAGState
            LOCK_TABLE: DataLake-scheduler-locks-${ENVIRONMENT}
            STATE_TABLE: DataLake-dag-state-${ENVIRONMENT}
        DAG_TOPIC_ARN: arn:aws:sns:us-east-1:${ACCOUNT}:DataLake-${ENVIRONMENT}-DAGProcessor
        ENVIRONMENT: ${ENVIRONMENT}
        LAMBDA_FUNCTION: AIP-${ENVIRONMENT}-LicensingDAG
        STATUS_NOTIFICATION_WEB_HOOK: https://amatoday.webhook.office.com/webhookb2/5cf63a5c-89ba-4724-b44f-8643269bae92@11fe67f6-fd54-4981-925f-94c36ed7b086/IncomingWebhook/1d0f20d047d042d68d01a8d855787009/b9b792dd-3637-4256-8a95-72d5d956f908
        TASK_EXECUTOR_CLASS: datalabs.etl.dag.execute.awslambda.LambdaTaskExecutorTask
        TASK_TOPIC_ARN: arn:aws:sns:us-east-1:${ACCOUNT}:DataLake-${ENVIRONMENT}-TaskProcessor
    EXTRACT_EMAILS:
        DATABASE_BACKEND: ${PLATFORM_DB_BACKEND}
        DATABASE_HOST: ${PLATFORM_DB_HOST}
        DATABASE_NAME: ${PLATFORM_DB_NAME}
        DATABASE_PASSWORD: ${PLATFORM_DB_PASSWORD}
        DATABASE_PORT: ${PLATFORM_DB_PORT}
        DATABASE_USERNAME: ${PLATFORM_DB_USERNAME}
        SQL: "
            SELECT TIMESTAMPDIFF(
                MONTH, g.valid_from, current_date()) as months,
                IFNULL(g.renewal_reminders, 0) as renewal_reminders , u.user_name,
                u.email as email_id, u.organization_id, g.id as id
            FROM User u
                INNER JOIN User_Group_Assignment uga ON u.id = uga.user_id
                INNER JOIN Groups g ON g.id = uga.group_id
            WHERE TIMESTAMPDIFF(MONTH, g.valid_from, current_date()) = 11 AND g.renewal_reminders  = 0 ORDER BY email;
        "

        CACHE_OUTPUT_BASE_PATH: ${S3_BASE_PATH}
        CACHE_OUTPUT_BUCKET: ${S3_INGESTED_DATA_BUCKET}
        CACHE_OUTPUT_CLASS: ${S3_CACHE_CLASS}
        CACHE_OUTPUT_FILES: email_addresses.csv
    INCREMENT_REMINDER_COUNTS:
        CACHE_BASE_PATH: ${S3_BASE_PATH}
        CACHE_CLASS: ${S3_CACHE_CLASS}

        CACHE_INPUT_BUCKET: ${S3_INGESTED_DATA_BUCKET}
        CACHE_INPUT_FILES: email_addresses.csv

        CACHE_OUTPUT_BUCKET: ${S3_PROCESSED_DATA_BUCKET}
        CACHE_OUTPUT_FILES: group_reminder_counts.csv
    SEND_REMINDER_EMAILS:
        CACHE_INPUT_BASE_PATH: ${S3_BASE_PATH}
        CACHE_INPUT_BUCKET: ${S3_INGESTED_DATA_BUCKET}
        CACHE_INPUT_CLASS: ${S3_CACHE_CLASS}
        CACHE_INPUT_FILES: email_addresses.csv
        PLATFORM_DOMAIN: ${PLATFORM_DOMAIN}
    UPDATE_REMINDER_COUNTS:
        CACHE_INPUT_BASE_PATH: ${S3_BASE_PATH}
        CACHE_INPUT_BUCKET: ${S3_PROCESSED_DATA_BUCKET}
        CACHE_INPUT_CLASS: ${S3_CACHE_CLASS}
        CACHE_INPUT_FILES: group_reminder_counts.csv

        DATABASE_BACKEND: ${PLATFORM_DB_BACKEND}
        DATABASE_HOST: ${PLATFORM_DB_HOST}
        DATABASE_NAME: ${PLATFORM_DB_NAME}
        DATABASE_PASSWORD: ${PLATFORM_DB_PASSWORD}
        DATABASE_PORT: ${PLATFORM_DB_PORT}
        DATABASE_USERNAME: ${PLATFORM_DB_USERNAME}
        MODEL_CLASSES: datalabs.model.intelligent_platform.licensing.Groups
        IGNORE_COLUMNS: id,name,organization_id,client_id,secret,environment_id,resource_id,valid_from,valid_to
        APPEND: 'True'
