#!/usr/bin/env bash

set -eux

SCRIPT_PATH=`realpath $0`
SCRIPT_BASE_PATH=`dirname $SCRIPT_PATH`
. ${SCRIPT_BASE_PATH}/determine-package-version.sh
RUN="${SCRIPT_BASE_PATH}/run.py python"

AWS_DEFAULT_REGION=us-east-1
DRIVER_BUCKET=ama-sbx-datalake-lambda-us-east-1

ENVIRONMENT=
PROJECT=
BUNDLE=
JDBC_DRIVER=
DEPLOYED_VERSION=
METADATA=
PACKAGE=
VERSION=


main() {
    process_arguments "$@"

    get_deployed_version

    determine_package_info

    if [[ "$DEPLOYED_VERSION" != "$RELEASE_VERSION" ]]; then
        create_code_bundle

        upload_code_bundle
    fi
}


process_arguments() {
    while (( "$#" )); do
      case "$1" in
        -h|--help)
            print_usage
            exit 0
            ;;
        -e|--environment)
            ENVIRONMENT=$2
            shift
            shift
            ;;
        -p|--project)
            PROJECT=$2
            shift
            shift
            ;;
        -b|--bundle)
            BUNDLE=$2
            shift
            shift
            ;;
        -j|--jdbc-driver)
            JDBC_DRIVER="$JDBC_DRIVER --jdbc-driver $2"
            shift
            shift
            ;;
        *)
            echo "Unexpected argument $1"
            print_usage
            exit 0
            ;;
      esac
    done
}


get_deployed_version() {
    DEPLOYED_VERSION=$(
        aws s3api head-object --bucket ama-${ENVIRONMENT}-datalake-lambda-us-east-1 --key ${BUNDLE} \
        | grep package_version | sed 's/"//g' | awk '{print $2}'
    )
}


create_code_bundle() {
    ${PWD}/Deploy/Master/create-bundle --environment $ENVIRONMENT --project $PROJECT $JDBC_DRIVER
}


upload_code_bundle() {
    aws s3 cp ${METADATA} Bundle.zip s3://ama-${ENVIRONMENT}-datalake-lambda-us-east-1/${BUNDLE}
}


print_usage() {
    echo "Usage: deploy-lambda-function [OPTIONS]..."
    echo "Bundle and upload a code bundle for a Lambda function."
    echo
    echo "OPTIONS"
    echo "  -h, --help                            print this usage text"
    echo "  -e, --environment <environment>       deployment environment (dev, tst, itg, prd)"
    echo "  -p, --project <project>               project path relative to Build/"
    echo "  -b, --bundle <bundle>                 name of the uploaded bundle file in S3"
}


main "$@"
