apiVersion: template.openshift.io/v1
kind: Template
labels:
  template: airflow-persistent
message: |-
    The following service(s) have been created in your project: ${APPLICATION_NAME}.

    Connection URL: https:/${APPLICATION_NAME}/
metadata:
  name: airflow-persistent
  namespace: hsg-data-labs-dev
  annotations:
    description: |-
      Airflow scheduler and webserver with a persistent PostgreSQL metadata backend.
    iconClass: airbnb
    openshift.io/display-name: Airflow
    openshift.io/documentation-url: https://airflow.apache.org/
    openshift.io/long-description: This template provides a standalone Airflow scheduler and webserver.  It includes
      a PostgreSQL database for metadata storage. All services are backed by a persistent volume.
    openshift.io/provider-display-name: HSG Data Labs
    tags: object,storage,s3


objects:
- apiVersion: v1
  kind: Service
  metadata:
    name: ${APPLICATION_NAME}-ui
    annotations:
      template.openshift.io/expose-service_ip_port: "{.spec.clusterIP}:{.spec.ports[?(.name==\"web\")].port}"
  spec:
    ports:
    - name: http
      nodePort: 0
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      name: ${APPLICATION_NAME}
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}

- apiVersion: v1
  kind: Route
  metadata:
    name: ${APPLICATION_NAME}-ui
    annotations:
      template.openshift.io/expose-uri: "http://{.spec.host}{.spec.path}"
  spec:
    host: ${APPLICATION_NAME}.apps.openshifttest.ama-assn.org
    port:
      targetPort: 8080
    tls:
      termination: edge
    to:
      kind: Service
      name: ${APPLICATION_NAME}-ui
      weight: 100
    wildcardPolicy: None
    selector:
      name: ${APPLICATION_NAME}
  status:
    ingress: null

- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: ${APPLICATION_NAME}-shared
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: ${VOLUME_CAPACITY}

- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    name: ${APPLICATION_NAME}
  spec:
    replicas: 1
    selector:
      name: ${APPLICATION_NAME}
    strategy:
      type: Recreate
    template:
      metadata:
        labels:
          name: ${APPLICATION_NAME}
      spec:
        containers:

        - name: airflow-scheduler
          image: ' '
          imagePullPolicy: IfNotPresent
          command:
          - /home/airflow/scheduler.sh
          env:
          - name: DATABASE_USER
            valueFrom:
              secretKeyRef:
                key: database-user
                name: ${APPLICATION_NAME}
          - name: DATABASE_PASSWORD
            valueFrom:
              secretKeyRef:
                key: database-password
                name: ${APPLICATION_NAME}
          - name: DATABASE_NAME
            valueFrom:
              secretKeyRef:
                key: database-name
                name: ${APPLICATION_NAME}
          - name: AIRFLOW__CORE__SQL_ALCHEMY_CONN
            value: postgresql+psycopg2://${DATABASE_USER}:${DATABASE_PASSWORD}@${APPLICATION_NAME}-db.hsg-data-labs-dev.svc.cluster.local:5432/${DATABASE_NAME}
          envFrom:
          - configMapRef:
              name: airflow-scheduler
          terminationMessagePath: /dev/termination-log
          volumeMounts:
          - mountPath: /home/airflow/shared
            name: ${APPLICATION_NAME}-shared

        - name: airflow-sync
          image: ' '
          imagePullPolicy: IfNotPresent
          command:
          - /Sync/entrypoint.sh
          args:
          - python
          - datalabs/deploy/airflow/sync/app.py
          env:
          - name: CLONE_URL
            value: ssh://git@bitbucket.ama-assn.org:7999/hsg-data-labs/hsg-data-labs.git
          - name: BRANCH
            value: master
          - name: DAG_SOURCE_PATH
            value: hsg-data-labs/Source/Python/datalabs/airflow/dag
          - name: DAG_TARGET_PATH
            value: /home/airflow/dags
          - name: SYNC_INTERVAL
            value: "900.0"
          - name: GIT_SSH_KEY
            valueFrom:
              secretKeyRef:
                name: bitbucketprd
                key: ssh-privatekey
          envFrom:
          - configMapRef:
              name: airflow-webserver
          ports:
          - containerPort: 8080
            protocol: TCP
          terminationMessagePath: /dev/termination-log
          volumeMounts:
          - mountPath: /home/airflow/dags
            name: ${APPLICATION_NAME}-shared

        - name: airflow-webserver
          image: ' '
          imagePullPolicy: IfNotPresent
          command:
          - /home/airflow/webserver.sh
          env:
          - name: DATABASE_USER
            valueFrom:
              secretKeyRef:
                name: ${APPLICATION_NAME}
                key: database-user
          - name: DATABASE_PASSWORD
            valueFrom:
              secretKeyRef:
                name: ${APPLICATION_NAME}
                key: database-password
          - name: DATABASE_NAME
            valueFrom:
              secretKeyRef:
                name: ${APPLICATION_NAME}
                key: database-name
          - name: AIRFLOW__CORE__SQL_ALCHEMY_CONN
            value: postgresql+psycopg2://${DATABASE_USER}:${DATABASE_PASSWORD}@${APPLICATION_NAME}-db.hsg-data-labs-dev.svc.cluster.local:5432/${DATABASE_NAME}
          envFrom:
          - configMapRef:
              name: airflow-webserver
          ports:
          - containerPort: 8080
            protocol: TCP
          terminationMessagePath: /dev/termination-log
          volumeMounts:
          - mountPath: /home/airflow/shared
            name: ${APPLICATION_NAME}-shared

        securityContext:
            fsGroup: 1000280000
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        volumes:
        - name: ${APPLICATION_NAME}-shared
          persistentVolumeClaim:
            claimName: ${APPLICATION_NAME}-shared
    triggers:
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
        - airflow-scheduler
        from:
          kind: ImageStreamTag
          name: airflow:latest
          namespace: hsg-data-labs-dev
        lastTriggeredImage: ""
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
        - airflow-sync
        from:
          kind: ImageStreamTag
          name: airflow-sync:latest
          namespace: hsg-data-labs-dev
        lastTriggeredImage: ""
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
        - airflow-webserver
        from:
          kind: ImageStreamTag
          name: airflow:latest
          namespace: hsg-data-labs-dev
        lastTriggeredImage: ""
    - type: ConfigChange


parameters:
- name: DATABASE_IMAGE_NAMESPACE
  description: The OpenShift Namespace where the ImageStream resides.
  displayName: Namespace
  value: openshift
- name: APPLICATION_NAME
  description: The name of the OpenShift Service exposed for the database.
  displayName: Airflow Service Name
  value: hsg-data-labs-airflow
- name: VOLUME_CAPACITY
  description: Volume space available for data, e.g. 512Mi, 2Gi.
  displayName: Volume Capacity
  value: 1Gi
