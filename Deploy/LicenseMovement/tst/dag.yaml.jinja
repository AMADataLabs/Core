---
LICENSE_MOVEMENT:
    GLOBAL:
        ACCOUNT: '194221139997'
        ENVIRONMENT: tst
        APP_STACK: OneView


        AIMS_HOST: rdbt1511.ama-assn.org
        AIMS_NAME: test_100_pct
        AIMS_PASSWORD: '{{database_password}}'
        AIMS_PORT: '22035'
        AIMS_USERNAME: dlabs
        DRIVER: com.informix.jdbc.IfxDriver
        DRIVER_TYPE: informix-sqli

        EFT_HOST: eft.ama-assn.org
        EFT_PASSWORD: '{{eft_password}}'
        EFT_USERNAME: datalabs

        JAR_PATH: ./jdbc-4.50.4.1.jar,./bson-4.2.0.jar

        BATCH_LOAD_PATH: Data Analytics/Data-Science/Data/LicenseMovement/batchload
        CREDENTIALING_DATA_BASE_PATH: Data Analytics/Data-Science/Data/Credentialing
        PPD_BASE_PATH: Data Analytics/Data-Science/Data/PPD/Expanded
        PPMA_BASE_PATH: AMA/operations/address/ppma/license_movement

        S3_CACHE_CLASS: datalabs.etl.dag.cache.s3.S3TaskDataCache
        S3_CACHE_JAVA_CLASS: datalabs.task.cache.S3TaskDataCache
        S3_INGESTED_DATA_BUCKET: ama-${ENVIRONMENT}-datalake-ingest-us-east-1
    DAG:
        DAG_CLASS: datalabs.etl.dag.masterfile.license_movement.DAG
        DAG_EXECUTOR_CLASS: datalabs.etl.dag.execute.awslambda.LambdaDAGExecutorTask
        DAG_STATE:
            CLASS: datalabs.etl.dag.state.dynamodb.DAGState
            LOCK_TABLE: DataLake-scheduler-locks-${ENVIRONMENT}
            STATE_TABLE: DataLake-dag-state-${ENVIRONMENT}
        DAG_TOPIC_ARN: arn:aws:sns:us-east-1:${ACCOUNT}:DataLake-${ENVIRONMENT}-DAGProcessor
        ENVIRONMENT: ${ENVIRONMENT}
        LAMBDA_FUNCTION: OneView-${ENVIRONMENT}-LicenseMovementDAG
        STATUS_NOTIFICATION_WEB_HOOK: https://amatoday.webhook.office.com/webhookb2/5cf63a5c-89ba-4724-b44f-8643269bae92@11fe67f6-fd54-4981-925f-94c36ed7b086/IncomingWebhook/1d0f20d047d042d68d01a8d855787009/b9b792dd-3637-4256-8a95-72d5d956f908
        TASK_CLASS: ''
        TASK_EXECUTOR_CLASS: datalabs.etl.dag.execute.awslambda.LambdaTaskExecutorTask
        TASK_TOPIC_ARN: arn:aws:sns:us-east-1:${ACCOUNT}:DataLake-${ENVIRONMENT}-TaskProcessor
    CREATE_BATCH_LOAD_FILE:
        CACHE_CLASS: ${S3_CACHE_CLASS}
        CACHE_INPUT_BASE_PATH: ${PPMA_BASE_PATH}
        CACHE_INPUT_BUCKET: ${S3_INGESTED_DATA_BUCKET}
        CACHE_INPUT_FILES: mismatch.csv,old_ppma.csv,credentialing.csv,ppd.csv
        CACHE_OUTPUT_BASE_PATH: ${PPMA_BASE_PATH}
        CACHE_OUTPUT_BUCKET: ${S3_INGESTED_DATA_BUCKET}
        CACHE_OUTPUT_CLASS: ${S3_CACHE_CLASS}
        CACHE_OUTPUT_FILES: results.csv
    EXTRACT_CREDENTIALING_ADDRESSES:
        BASE_PATH: ${CREDENTIALING_DATA_BASE_PATH}
        CACHE_OUTPUT_BASE_PATH: ${PPMA_BASE_PATH}
        CACHE_OUTPUT_BUCKET: ${S3_INGESTED_DATA_BUCKET}
        CACHE_OUTPUT_CLASS: ${S3_CACHE_CLASS}
        CACHE_OUTPUT_FILES: credentialing.csv
        FILES: Credentialing_Addresses_latest.csv
        HOST: ${EFT_HOST}
        PASSWORD: ${EFT_PASSWORD}
        USERNAME: ${EFT_USERNAME}
    EXTRACT_MISMATCHES:
        DAG_STATE:
            CLASS: datalabs.etl.dag.state.dynamodb.DagState
            LOCK_TABLE: DataLake-scheduler-locks-${ENVIRONMENT}
            STATE_TABLE: DataLake-dag-state-${ENVIRONMENT}

        TASK_CLASS: datalabs.etl.sql.SqlExtractorTask
        DATABASE_HOST: ${AIMS_HOST}
        DATABASE_NAME: ${AIMS_NAME}
        DATABASE_PASSWORD: ${AIMS_PASSWORD}
        DATABASE_PORT: ${AIMS_PORT}
        DATABASE_USERNAME: ${AIMS_USERNAME}
        DRIVER: ${DRIVER}
        DRIVER_TYPE: ${DRIVER_TYPE}
        JAR_PATH: ${JAR_PATH}
        LAMBDA_FUNCTION: OneView-${ENVIRONMENT}-LicenseMovement-Extract
        SQL: "
            SELECT
                SKIP 0 FIRST 5000 l.entity_id,
                l.state_cd AS license_state,
                l.lic_issue_dt,
                l.lic_exp_dt,
                l.lic_sts,
                ppma.comm_id AS ppma_comm_id,
                ppma.state_cd as ppma_state,
                ppma.zip as ppma_zip,
                ppma.usg_begin_dt AS ppma_begin_dt,
                addr.comm_id AS license_addr_comm_id,
                addr.addr_line0,
                addr.addr_line1,
                addr.addr_line2,
                addr.city_cd,
                addr.state_cd AS license_addr_state,
                addr.zip
            FROM
                license_lt l
                INNER JOIN
                (
                    SELECT usg.entity_id, usg.comm_id, usg.usg_begin_dt, usg.comm_usage, addr.state_cd, addr.zip
                    FROM
                        entity_comm_usg_at usg
                        INNER JOIN post_addr_at addr
                        ON addr.comm_id = usg.comm_id
                    WHERE
                        usg.comm_usage = 'PP' AND
                        usg.end_dt IS NULL
                ) as ppma
                ON ppma.entity_id = l.entity_id
                INNER JOIN
                post_addr_at addr
                ON addr.comm_id = l.comm_id
            WHERE
                l.lic_sts = 'A' AND
                l.lic_issue_dt > ppma.usg_begin_dt AND
                l.state_cd <> ppma.state_cd AND
                ppma.state_cd <> addr.state_cd
            ORDER BY l.entity_id
        "

        CACHE_OUTPUT_CLASS: ${S3_CACHE_JAVA_CLASS}
        CACHE_OUTPUT_BASE_PATH: ${PPMA_BASE_PATH}
        CACHE_OUTPUT_BUCKET: ${S3_INGESTED_DATA_BUCKET}
        CACHE_OUTPUT_FILES: mismatch.csv
    EXTRACT_OLD_PPMA:
        LAMBDA_FUNCTION: OneView-${ENVIRONMENT}-LicenseMovement-Extract
        DAG_STATE:
            CLASS: datalabs.etl.dag.state.dynamodb.DagState
            LOCK_TABLE: DataLake-scheduler-locks-${ENVIRONMENT}
            STATE_TABLE: DataLake-dag-state-${ENVIRONMENT}

        TASK_CLASS: datalabs.etl.sql.SqlExtractorTask
        DATABASE_HOST: ${AIMS_HOST}
        DATABASE_NAME: ${AIMS_NAME}
        DATABASE_PASSWORD: ${AIMS_PASSWORD}
        DATABASE_PORT: ${AIMS_PORT}
        DATABASE_USERNAME: ${AIMS_USERNAME}
        DRIVER: ${DRIVER}
        DRIVER_TYPE: ${DRIVER_TYPE}
        JAR_PATH: ${JAR_PATH}
        SQL: "
            SELECT
                usg.entity_id,
                usg.comm_id AS previous_ppma_comm_id
            FROM
                entity_comm_usg_at usg
                INNER JOIN post_addr_at addr
                ON addr.comm_id = usg.comm_id
            WHERE
                usg.comm_usage = 'PP' AND
                usg.end_dt IS NOT NULL
        "

        CACHE_OUTPUT_CLASS: ${S3_CACHE_JAVA_CLASS}
        CACHE_OUTPUT_BASE_PATH: ${PPMA_BASE_PATH}
        CACHE_OUTPUT_BUCKET: ${S3_INGESTED_DATA_BUCKET}
        CACHE_OUTPUT_FILES: old_ppma.csv
    EXTRACT_PPD:
        BASE_PATH: ${PPD_BASE_PATH}
        FILES: ppd_analysis_file.csv
        HOST: ${EFT_HOST}
        PASSWORD: ${EFT_PASSWORD}
        USERNAME: ${EFT_USERNAME}

        CACHE_OUTPUT_CLASS: ${S3_CACHE_CLASS}
        CACHE_OUTPUT_BASE_PATH: ${PPMA_BASE_PATH}
        CACHE_OUTPUT_BUCKET: ${S3_INGESTED_DATA_BUCKET}
        CACHE_OUTPUT_FILES: ppd.csv
    LOAD_BATCH_LOAD_FILE:
        CACHE_INPUT_CLASS: ${S3_CACHE_CLASS}
        CACHE_INPUT_BASE_PATH: ${PPMA_BASE_PATH}
        CACHE_INPUT_BUCKET: ${S3_INGESTED_DATA_BUCKET}
        CACHE_INPUT_FILES: results.csv

        BASE_PATH: ${BATCH_LOAD_PATH}
        FILES: LICENSE_MOVEMENT_PPMA_ADDRESS_LOAD_%Y-%m-%d.txt
        HOST: ${EFT_HOST}
        PASSWORD: ${EFT_PASSWORD}
        USERNAME: ${EFT_USERNAME}
