''' DAG definition for the OneView ETL. '''
from   datalabs.etl.dag.dag import DAG, register, Repeat


@register(name="ONEVIEW")
class OneViewDAG(DAG):
    EXTRACT_PPD: "datalabs.etl.sftp.extract.SFTPIBM437TextFileExtractorTask"
    EXTRACT_PHYSICIAN_RACE_ETHNICITY: "datalabs.etl.sftp.extract.SFTPFileExtractorTask"
    EXTRACT_MEDICAL_STUDENT: "datalabs.etl.sftp.extract.SFTPFileExtractorTask"
    SUPPLEMENT_PPD_TABLE: "datalabs.etl.oneview.ppd.transform.PPDTransformerTask"
    SPLIT_PPD_TABLE: "datalabs.etl.manipulate.transform.SplitTransformerTask"

    EXTRACT_PARTY_KEYS: Repeat("datalabs.etl.sql.SqlExtractorTask", 3)
    CONCATENATE_PARTY_KEYS: "datalabs.etl.manipulate.transform.ConcatenateTransformerTask"
    CREATE_PHYSICIAN_NPI_TABLE: "datalabs.etl.oneview.ppd.transform.NPITransformerTask"

    EXTRACT_MEMBERSHIP_DATA: "datalabs.etl.sql.SqlExtractorTask"
    EXTRACT_PHYSICIAN_EMAIL_STATUS: "datalabs.etl.sql.SqlExtractorTask"
    CREATE_PHYSICIAN_EMAIL_STATUS_TABLE: "datalabs.etl.oneview.email.transform.PhysicianEmailStatusTransformer"
    CREATE_PHYSICIAN_TABLE: Repeat("datalabs.etl.oneview.ppd.transform.PhysicianTransformerTask", 10)
    CONCATENATE_PHYSICIAN_TABLE: "datalabs.etl.manipulate.transform.ConcatenateTransformerTask"

    EXTRACT_FEDERAL_INFORMATION_PROCESSING_STANDARD_COUNTY: "datalabs.etl.http.extract.HTTPFileExtractorTask"
    EXTRACT_FEDERAL_INFORMATION_PROCESSING_STANDARD_COUNTY_TABLE_SUPPLEMENT: \
        "datalabs.etl.s3.extract.S3FileExtractorTask"
    CREATE_FEDERAL_INFORMATION_PROCESSING_STANDARD_COUNTY_TABLE: \
        "datalabs.etl.oneview.reference.transform.FederalInformationProcessingStandardCountyTransformerTask"
    SUPPLEMENT_FEDERAL_INFORMATION_PROCESSING_STANDARD_COUNTY_TABLE: \
        "datalabs.etl.manipulate.transform.ConcatenateTransformerTask"
    LOAD_FEDERAL_INFORMATION_PROCESSING_STANDARD_COUNTY_TABLE: "datalabs.etl.orm.load.ORMLoaderTask"

    EXTRACT_STATE: "datalabs.etl.sql.SqlExtractorTask"
    CREATE_STATE_TABLE: "datalabs.etl.oneview.reference.transform.StateTransformerTask"
    LOAD_STATE_TABLE: "datalabs.etl.orm.load.ORMLoaderTask"

    EXTRACT_SPECIALTY: "datalabs.etl.sql.SqlExtractorTask"
    CREATE_SPECIALTY_TABLE: "datalabs.etl.transform.PassThroughTransformerTask"
    LOAD_SPECIALTY_TABLE: "datalabs.etl.orm.load.ORMLoaderTask"
    REMOVE_UNUSED_SPECIALTIES: "datalabs.etl.oneview.reference.transform.SpecialtyMergeTransformerTask"

    EXTRACT_MAJOR_PROFESSIONAL_ACTIVITY: "datalabs.etl.sql.SqlExtractorTask"
    CREATE_MAJOR_PROFESSIONAL_ACTIVITY_TABLE: \
        "datalabs.etl.oneview.reference.transform.MajorProfessionalActivityTransformerTask"
    LOAD_MAJOR_PROFESSIONAL_ACTIVITY_TABLE: "datalabs.etl.orm.load.ORMLoaderTask"

    EXTRACT_CORE_BASED_STATISTICAL_AREA: "datalabs.etl.s3.extract.S3FileExtractorTask"
    CREATE_CORE_BASED_STATISTICAL_AREA_TABLE: \
        "datalabs.etl.oneview.reference.transform.CoreBasedStatisticalAreaTransformerTask"
    LOAD_CORE_BASED_STATISTICAL_AREA_TABLE: "datalabs.etl.orm.load.ORMLoaderTask"

    EXTRACT_PRESENT_EMPLOYMENT: "datalabs.etl.sql.SqlExtractorTask"
    CREATE_PRESENT_EMPLOYMENT_TABLE: "datalabs.etl.oneview.reference.transform.PresentEmploymentTransformerTask"
    LOAD_PRESENT_EMPLOYMENT_TABLE: "datalabs.etl.orm.load.ORMLoaderTask"

    EXTRACT_TYPE_OF_PRACTICE: "datalabs.etl.sql.SqlExtractorTask"
    CREATE_TYPE_OF_PRACTICE_TABLE: "datalabs.etl.oneview.reference.transform.TypeOfPracticeTransformerTask"
    LOAD_TYPE_OF_PRACTICE_TABLE: "datalabs.etl.orm.load.ORMLoaderTask"

    LOAD_PHYSICIAN_TABLE: "datalabs.etl.orm.load.ORMLoaderTask"
    PRUNE_PHYSICIAN_TABLE: "datalabs.etl.orm.load.ORMLoaderTask"

    EXTRACT_RESIDENCY: "datalabs.etl.sftp.extract.SFTPFileExtractorTask"
    CREATE_RESIDENCY_TABLES: "datalabs.etl.oneview.residency.transform.ResidencyTransformerTask"
    LOAD_RESIDENCY_INSTITUTION_TABLE: "datalabs.etl.orm.load.ORMLoaderTask"
    LOAD_RESIDENCY_PROGRAM_TABLE: "datalabs.etl.orm.load.ORMLoaderTask"
    LOAD_RESIDENCY_PERSONNEL_TABLE: "datalabs.etl.orm.load.ORMLoaderTask"

    CREATE_RESIDENCY_PROGRAM_PHYSICIAN_TABLE: \
        "datalabs.etl.oneview.link.transform.ResidencyProgramPhysicianTransformerTask"

    EXTRACT_MELISSA: "datalabs.etl.sql.SqlExtractorTask"
    CREATE_MELISSA_TABLES: "datalabs.etl.oneview.melissa.transform.MelissaTransformerTask"
    LOAD_METROPOLITAN_STATISTICAL_AREA_TABLE: "datalabs.etl.orm.load.ORMLoaderTask"
    LOAD_COUNTY_TABLE: "datalabs.etl.orm.load.ORMLoaderTask"
    LOAD_CORE_BASED_STATISTICAL_AREA_MELISSA_TABLE: "datalabs.etl.orm.load.ORMLoaderTask"
    LOAD_ZIP_CODE_TABLE: "datalabs.etl.orm.load.ORMLoaderTask"
    LOAD_AREA_CODE_TABLE: "datalabs.etl.orm.load.ORMLoaderTask"
    LOAD_CENSUS_TABLE: "datalabs.etl.orm.load.ORMLoaderTask"
    LOAD_ZIP_CODE_CORE_BASED_STATISTICAL_AREA_TABLE: "datalabs.etl.orm.load.ORMLoaderTask"

    EXTRACT_IQVIA_BUSINESS: Repeat("datalabs.etl.sql.SqlExtractorTask", 6)
    CREATE_BUSINESS_TABLE: Repeat("datalabs.etl.oneview.iqvia.transform.IQVIABusinessTransformerTask", 6)
    CREATE_IQVIA_UPDATE_TABLE: "datalabs.etl.oneview.iqvia.transform.IQVIAUpdateTransformerTask"
    CONCATENATE_BUSINESS_TABLE: "datalabs.etl.manipulate.transform.ConcatenateTransformerTask"
    LOAD_BUSINESS_TABLE: Repeat("datalabs.etl.orm.load.ORMLoaderTask", 6)
    EXTRACT_IQVIA_PROVIDER: "datalabs.etl.sql.SqlExtractorTask"
    EXTRACT_IQVIA_PROVIDER_AFFILIATION: "datalabs.etl.sql.SqlExtractorTask"
    EXTRACT_IQVIA_BEST_PROVIDER_AFFILIATION: "datalabs.etl.sql.SqlExtractorTask"
    CREATE_PROVIDER_TABLE: "datalabs.etl.oneview.iqvia.transform.IQVIAProviderTransformerTask"
    REMOVE_UNKNOWN_PROVIDERS: "datalabs.etl.oneview.iqvia.transform.IQVIAProviderPruningTransformerTask"
    SPLIT_IQVIA_PROVIDER_TABLE: "datalabs.etl.manipulate.transform.SplitTransformerTask"
    SPLIT_IQVIA_PROVIDER_AFFILIATION_TABLE: "datalabs.etl.manipulate.transform.SplitTransformerTask"
    LOAD_IQVIA_PROVIDER_TABLE: Repeat("datalabs.etl.orm.load.ORMLoaderTask", 3)
    LOAD_IQVIA_PROVIDER_AFFILIATION_TABLE: Repeat("datalabs.etl.orm.load.ORMLoaderTask", 6)
    LOAD_IQVIA_UPDATE_TABLE: "datalabs.etl.orm.load.ORMLoaderTask"

    EXTRACT_CREDENTIALING_CUSTOMER: "datalabs.etl.sql.SqlExtractorTask"
    EXTRACT_CREDENTIALING_PRODUCT: "datalabs.etl.sql.SqlExtractorTask"
    EXTRACT_CREDENTIALING_ORDER_YEARS: "datalabs.etl.sql.SqlExtractorTask"
    EXTRACT_CREDENTIALING_ORDER: Repeat("SqlParametricExtractorTask", 9)
    EXTRACT_CREDENTIALING_ADDRESSES: "datalabs.etl.sftp.extract.SFTPFileExtractorTask"
    CONCATENATE_CREDENTIALING_ORDER: "datalabs.etl.manipulate.transform.ConcatenateTransformerTask"
    CREATE_CREDENTIALING_CUSTOMER_PRODUCT_AND_ORDER_TABLES: \
        "datalabs.etl.oneview.credentialing.transform.CredentialingTransformerTask"
    MERGE_CREDENTIALING_ADDRESSES_INTO_CUSTOMER_TABLE: \
        "datalabs.etl.oneview.credentialing.transform.CredentialingFinalTransformerTask"
    REMOVE_UNKNOWN_ORDERS: "datalabs.etl.oneview.credentialing.transform.CredentialingOrderPruningTransformerTask"
    SPLIT_CREDENTIALING_ORDER_TABLE: "datalabs.etl.manipulate.transform.SplitTransformerTask"

    LOAD_CREDENTIALING_CUSTOMER_TABLE: "datalabs.etl.orm.load.ORMLoaderTask"
    LOAD_CREDENTIALING_PRODUCT_TABLE: "datalabs.etl.orm.load.ORMLoaderTask"
    LOAD_CREDENTIALING_ORDER_TABLE: Repeat("datalabs.etl.orm.load.ORMLoaderTask", 12)

    # CREATE_CREDENTIALING_CUSTOMER_INSTITUTION_TABLE: \
    #   "datalabs.etl.oneview.link.transform.CredentialingCustomerInstitutionTransformerTask"  # v2
    # CREATE_CREDENTIALING_CUSTOMER_BUSINESS_TABLE: \
    #   "datalabs.etl.oneview.link.transform.CredentialingCustomerBusinessTransformerTask"  # v2
    LOAD_LINKING_TABLES: "datalabs.etl.orm.load.ORMLoaderTask"

    EXTRACT_HISTORICAL_RESIDENT: "datalabs.etl.sftp.extract.SFTPFileExtractorTask"
    CREATE_HISTORICAL_RESIDENT_TABLE: \
        "datalabs.etl.oneview.historical_resident.transform.HistoricalResidentTransformerTask"
    REMOVE_UNKNOWN_HISTORICAL_RESIDENTS: \
        "datalabs.etl.oneview.historical_resident.transform.HistoricalResidentPruningTransformerTask"
    SPLIT_HISTORICAL_RESIDENT_TABLE: "datalabs.etl.manipulate.transform.SplitTransformerTask"
    LOAD_HISTORICAL_RESIDENT_TABLE: Repeat("datalabs.etl.orm.load.ORMLoaderTask", 6)

    EXTRACT_CLASS_OF_TRADE: "datalabs.etl.sql.SqlExtractorTask"
    CREATE_STATIC_REFERENCE_TABLE: "datalabs.etl.oneview.reference.transform.StaticReferenceTablesTransformerTask"
    CREATE_CLASS_OF_TRADE_TABLE: "datalabs.etl.oneview.reference.transform.ClassOfTradeTransformerTask"
    LOAD_CLASS_OF_TRADE_TABLE: "datalabs.etl.orm.load.ORMLoaderTask"
    LOAD_STATIC_REFERENCE_TABLE: "datalabs.etl.orm.load.ORMLoaderTask"
    EXTRACT_MEDICAL_SCHOOL: "datalabs.etl.sql.SqlExtractorTask"
    CREATE_MEDICAL_SCHOOL_TABLE: "datalabs.etl.oneview.reference.transform.MedicalSchoolTransformerTask"
    LOAD_MEDICAL_SCHOOL_TABLE: "datalabs.etl.orm.load.ORMLoaderTask"

    EXTRACT_MEDICAL_LICENSES: "datalabs.etl.sql.SqlExtractorTask"
    CLEAN_MEDICAL_LICENSES: "datalabs.etl.oneview.medical_licenses.transform.MedicalLicensesCleanerTask"
    CREATE_MEDICAL_LICENSES_TABLE: "datalabs.etl.oneview.medical_licenses.transform.MedicalLicensesTransformerTask"
    LOAD_MEDICAL_LICENSES_TABLE: "datalabs.etl.orm.load.ORMLoaderTask"

    # The refresh tasks will be run using AWS Batch instead of Lambda
    REFRESH_PHYSICIAN_VIEW: "datalabs.etl.orm.load.MaterializedViewRefresherTask"
    REINDEX_PHYSICIAN_VIEW: "datalabs.etl.orm.load.ReindexerTask"
    REFRESH_PROVIDER_VIEW: "datalabs.etl.orm.load.MaterializedViewRefresherTask"
    REINDEX_PROVIDER_VIEW: "datalabs.etl.orm.load.ReindexerTask"


# pylint: "disable=pointless-statement, expression-not-assigned"
OneViewDAG.EXTRACT_PPD >> OneViewDAG.SUPPLEMENT_PPD_TABLE
OneViewDAG.EXTRACT_PHYSICIAN_RACE_ETHNICITY >> OneViewDAG.SUPPLEMENT_PPD_TABLE
OneViewDAG.EXTRACT_MEDICAL_STUDENT >> OneViewDAG.SUPPLEMENT_PPD_TABLE
OneViewDAG.SUPPLEMENT_PPD_TABLE >> OneViewDAG.SPLIT_PPD_TABLE

OneViewDAG.sequence('EXTRACT_PARTY_KEYS')
OneViewDAG.last('EXTRACT_PARTY_KEYS') \
    >> OneViewDAG.CONCATENATE_PARTY_KEYS \
    >> OneViewDAG.CREATE_PHYSICIAN_NPI_TABLE
OneViewDAG.CREATE_PHYSICIAN_NPI_TABLE >> OneViewDAG.first('CREATE_PHYSICIAN_TABLE')
OneViewDAG.EXTRACT_MEMBERSHIP_DATA >> OneViewDAG.first('CREATE_PHYSICIAN_TABLE')
OneViewDAG.CREATE_PHYSICIAN_EMAIL_STATUS_TABLE >> OneViewDAG.first('CREATE_PHYSICIAN_TABLE')

OneViewDAG.EXTRACT_PHYSICIAN_EMAIL_STATUS >> OneViewDAG.CREATE_PHYSICIAN_EMAIL_STATUS_TABLE

OneViewDAG.fan_out('CREATE_PHYSICIAN_EMAIL_STATUS_TABLE', 'CREATE_PHYSICIAN_TABLE')
OneViewDAG.fan_out('SPLIT_PPD_TABLE', 'CREATE_PHYSICIAN_TABLE')
OneViewDAG.fan_out('CREATE_PHYSICIAN_NPI_TABLE', 'CREATE_PHYSICIAN_TABLE')
OneViewDAG.fan_in('CREATE_PHYSICIAN_TABLE', 'CONCATENATE_PHYSICIAN_TABLE')

OneViewDAG.EXTRACT_FEDERAL_INFORMATION_PROCESSING_STANDARD_COUNTY \
    >> OneViewDAG.CREATE_FEDERAL_INFORMATION_PROCESSING_STANDARD_COUNTY_TABLE \
    >> OneViewDAG.SUPPLEMENT_FEDERAL_INFORMATION_PROCESSING_STANDARD_COUNTY_TABLE \
    >> OneViewDAG.LOAD_FEDERAL_INFORMATION_PROCESSING_STANDARD_COUNTY_TABLE

OneViewDAG.EXTRACT_FEDERAL_INFORMATION_PROCESSING_STANDARD_COUNTY_TABLE_SUPPLEMENT\
    >> OneViewDAG.SUPPLEMENT_FEDERAL_INFORMATION_PROCESSING_STANDARD_COUNTY_TABLE

OneViewDAG.EXTRACT_STATE >> OneViewDAG.CREATE_STATE_TABLE >> OneViewDAG.LOAD_STATE_TABLE

OneViewDAG.EXTRACT_SPECIALTY >> OneViewDAG.CREATE_SPECIALTY_TABLE >> OneViewDAG.REMOVE_UNUSED_SPECIALTIES
OneViewDAG.CONCATENATE_PHYSICIAN_TABLE >> OneViewDAG.REMOVE_UNUSED_SPECIALTIES
OneViewDAG.REMOVE_UNUSED_SPECIALTIES >> OneViewDAG.LOAD_SPECIALTY_TABLE

OneViewDAG.EXTRACT_MAJOR_PROFESSIONAL_ACTIVITY >> OneViewDAG.CREATE_MAJOR_PROFESSIONAL_ACTIVITY_TABLE \
    >> OneViewDAG.LOAD_MAJOR_PROFESSIONAL_ACTIVITY_TABLE

OneViewDAG.EXTRACT_CORE_BASED_STATISTICAL_AREA \
    >> OneViewDAG.CREATE_CORE_BASED_STATISTICAL_AREA_TABLE \
    >> OneViewDAG.LOAD_CORE_BASED_STATISTICAL_AREA_TABLE

OneViewDAG.EXTRACT_PRESENT_EMPLOYMENT \
    >> OneViewDAG.CREATE_PRESENT_EMPLOYMENT_TABLE \
    >> OneViewDAG.LOAD_PRESENT_EMPLOYMENT_TABLE

OneViewDAG.EXTRACT_TYPE_OF_PRACTICE \
    >> OneViewDAG.CREATE_TYPE_OF_PRACTICE_TABLE \
    >> OneViewDAG.LOAD_TYPE_OF_PRACTICE_TABLE


OneViewDAG.CONCATENATE_PHYSICIAN_TABLE >> OneViewDAG.LOAD_PHYSICIAN_TABLE
OneViewDAG.LOAD_FEDERAL_INFORMATION_PROCESSING_STANDARD_COUNTY_TABLE >> OneViewDAG.LOAD_PHYSICIAN_TABLE
OneViewDAG.LOAD_STATE_TABLE >> OneViewDAG.LOAD_PHYSICIAN_TABLE
OneViewDAG.LOAD_SPECIALTY_TABLE >> OneViewDAG.LOAD_PHYSICIAN_TABLE
OneViewDAG.LOAD_MAJOR_PROFESSIONAL_ACTIVITY_TABLE >> OneViewDAG.LOAD_PHYSICIAN_TABLE
OneViewDAG.LOAD_CORE_BASED_STATISTICAL_AREA_TABLE >> OneViewDAG.LOAD_PHYSICIAN_TABLE
OneViewDAG.LOAD_PRESENT_EMPLOYMENT_TABLE >> OneViewDAG.LOAD_PHYSICIAN_TABLE
OneViewDAG.LOAD_TYPE_OF_PRACTICE_TABLE >> OneViewDAG.LOAD_PHYSICIAN_TABLE

OneViewDAG.LOAD_PHYSICIAN_TABLE >> OneViewDAG.PRUNE_PHYSICIAN_TABLE

OneViewDAG.EXTRACT_RESIDENCY >> OneViewDAG.CREATE_RESIDENCY_TABLES \
    >> OneViewDAG.LOAD_RESIDENCY_INSTITUTION_TABLE \
    >> OneViewDAG.LOAD_RESIDENCY_PROGRAM_TABLE \
    >> OneViewDAG.LOAD_RESIDENCY_PERSONNEL_TABLE

OneViewDAG.CONCATENATE_PHYSICIAN_TABLE >> OneViewDAG.CREATE_RESIDENCY_PROGRAM_PHYSICIAN_TABLE
OneViewDAG.CREATE_RESIDENCY_TABLES >> OneViewDAG.CREATE_RESIDENCY_PROGRAM_PHYSICIAN_TABLE

OneViewDAG.EXTRACT_MELISSA >> OneViewDAG.CREATE_MELISSA_TABLES
OneViewDAG.CREATE_MELISSA_TABLES >> OneViewDAG.LOAD_AREA_CODE_TABLE
OneViewDAG.CREATE_MELISSA_TABLES >> OneViewDAG.LOAD_CENSUS_TABLE
OneViewDAG.CREATE_MELISSA_TABLES >> OneViewDAG.LOAD_METROPOLITAN_STATISTICAL_AREA_TABLE
OneViewDAG.CREATE_MELISSA_TABLES >> OneViewDAG.LOAD_CORE_BASED_STATISTICAL_AREA_MELISSA_TABLE
OneViewDAG.CREATE_MELISSA_TABLES >> OneViewDAG.LOAD_COUNTY_TABLE
OneViewDAG.CREATE_MELISSA_TABLES >> OneViewDAG.LOAD_ZIP_CODE_CORE_BASED_STATISTICAL_AREA_TABLE
OneViewDAG.CREATE_MELISSA_TABLES >> OneViewDAG.LOAD_ZIP_CODE_TABLE

OneViewDAG.CREATE_RESIDENCY_PROGRAM_PHYSICIAN_TABLE >> OneViewDAG.LOAD_LINKING_TABLES
OneViewDAG.LOAD_RESIDENCY_PERSONNEL_TABLE >> OneViewDAG.LOAD_LINKING_TABLES
OneViewDAG.LOAD_PHYSICIAN_TABLE >> OneViewDAG.LOAD_LINKING_TABLES

OneViewDAG.sequence('EXTRACT_IQVIA_BUSINESS')
OneViewDAG.parallel('EXTRACT_IQVIA_BUSINESS', 'CREATE_BUSINESS_TABLE')
OneViewDAG.fan_in('CREATE_BUSINESS_TABLE', 'CONCATENATE_BUSINESS_TABLE')

OneViewDAG.first('EXTRACT_IQVIA_BUSINESS') \
    >> OneViewDAG.CREATE_IQVIA_UPDATE_TABLE \
    >> OneViewDAG.LOAD_IQVIA_UPDATE_TABLE

OneViewDAG.LOAD_STATIC_REFERENCE_TABLE >> OneViewDAG.first('LOAD_BUSINESS_TABLE')

OneViewDAG.fan_out('CREATE_CLASS_OF_TRADE_TABLE', 'CREATE_BUSINESS_TABLE')

OneViewDAG.CONCATENATE_BUSINESS_TABLE >> OneViewDAG.first('LOAD_BUSINESS_TABLE')
OneViewDAG.sequence('LOAD_BUSINESS_TABLE')

OneViewDAG.EXTRACT_IQVIA_PROVIDER >> OneViewDAG.CREATE_PROVIDER_TABLE
OneViewDAG.EXTRACT_IQVIA_PROVIDER_AFFILIATION >> OneViewDAG.CREATE_PROVIDER_TABLE
OneViewDAG.EXTRACT_IQVIA_BEST_PROVIDER_AFFILIATION >> OneViewDAG.CREATE_PROVIDER_TABLE

OneViewDAG.CONCATENATE_PHYSICIAN_TABLE >> OneViewDAG.REMOVE_UNKNOWN_PROVIDERS
OneViewDAG.CONCATENATE_BUSINESS_TABLE >> OneViewDAG.REMOVE_UNKNOWN_PROVIDERS
OneViewDAG.CREATE_PROVIDER_TABLE >> OneViewDAG.REMOVE_UNKNOWN_PROVIDERS
OneViewDAG.REMOVE_UNKNOWN_PROVIDERS >> OneViewDAG.SPLIT_IQVIA_PROVIDER_TABLE
OneViewDAG.REMOVE_UNKNOWN_PROVIDERS >> OneViewDAG.SPLIT_IQVIA_PROVIDER_AFFILIATION_TABLE
OneViewDAG.LOAD_PHYSICIAN_TABLE >> OneViewDAG.first('LOAD_IQVIA_PROVIDER_TABLE')
OneViewDAG.LOAD_IQVIA_UPDATE_TABLE >> OneViewDAG.first('LOAD_IQVIA_PROVIDER_TABLE')

OneViewDAG.SPLIT_IQVIA_PROVIDER_TABLE >> OneViewDAG.first('LOAD_IQVIA_PROVIDER_TABLE')
OneViewDAG.sequence('LOAD_IQVIA_PROVIDER_TABLE')

OneViewDAG.LOAD_PHYSICIAN_TABLE >> OneViewDAG.first('LOAD_IQVIA_PROVIDER_AFFILIATION_TABLE')
OneViewDAG.last('LOAD_IQVIA_PROVIDER_TABLE') >> OneViewDAG.first('LOAD_IQVIA_PROVIDER_AFFILIATION_TABLE')
OneViewDAG.last('LOAD_BUSINESS_TABLE') >> OneViewDAG.first('LOAD_IQVIA_PROVIDER_AFFILIATION_TABLE')
OneViewDAG.SPLIT_IQVIA_PROVIDER_AFFILIATION_TABLE >> OneViewDAG.first('LOAD_IQVIA_PROVIDER_AFFILIATION_TABLE')
OneViewDAG.sequence('LOAD_IQVIA_PROVIDER_AFFILIATION_TABLE')

OneViewDAG.EXTRACT_CREDENTIALING_CUSTOMER >> OneViewDAG.EXTRACT_CREDENTIALING_ADDRESSES \
    >> OneViewDAG.MERGE_CREDENTIALING_ADDRESSES_INTO_CUSTOMER_TABLE
OneViewDAG.EXTRACT_CREDENTIALING_CUSTOMER >> OneViewDAG.CREATE_CREDENTIALING_CUSTOMER_PRODUCT_AND_ORDER_TABLES
OneViewDAG.EXTRACT_CREDENTIALING_PRODUCT >> OneViewDAG.CREATE_CREDENTIALING_CUSTOMER_PRODUCT_AND_ORDER_TABLES

OneViewDAG.fan_out('EXTRACT_CREDENTIALING_ORDER_YEARS', 'EXTRACT_CREDENTIALING_ORDER')
OneViewDAG.sequence('EXTRACT_CREDENTIALING_ORDER')
OneViewDAG.last('EXTRACT_CREDENTIALING_ORDER') >> OneViewDAG.CONCATENATE_CREDENTIALING_ORDER \
    >> OneViewDAG.CREATE_CREDENTIALING_CUSTOMER_PRODUCT_AND_ORDER_TABLES

OneViewDAG.CREATE_CREDENTIALING_CUSTOMER_PRODUCT_AND_ORDER_TABLES \
    >> OneViewDAG.LOAD_CREDENTIALING_CUSTOMER_TABLE >> OneViewDAG.LOAD_CREDENTIALING_PRODUCT_TABLE
OneViewDAG.MERGE_CREDENTIALING_ADDRESSES_INTO_CUSTOMER_TABLE >> OneViewDAG.LOAD_CREDENTIALING_CUSTOMER_TABLE \
    >> OneViewDAG.LOAD_CREDENTIALING_PRODUCT_TABLE

OneViewDAG.CONCATENATE_PHYSICIAN_TABLE >> OneViewDAG.REMOVE_UNKNOWN_ORDERS
OneViewDAG.MERGE_CREDENTIALING_ADDRESSES_INTO_CUSTOMER_TABLE >> OneViewDAG.REMOVE_UNKNOWN_ORDERS
OneViewDAG.CREATE_CREDENTIALING_CUSTOMER_PRODUCT_AND_ORDER_TABLES >> OneViewDAG.REMOVE_UNKNOWN_ORDERS
OneViewDAG.LOAD_PHYSICIAN_TABLE >> OneViewDAG.REMOVE_UNKNOWN_ORDERS
OneViewDAG.REMOVE_UNKNOWN_ORDERS \
    >> OneViewDAG.SPLIT_CREDENTIALING_ORDER_TABLE \
    >> OneViewDAG.first('LOAD_CREDENTIALING_ORDER_TABLE')
OneViewDAG.sequence('LOAD_CREDENTIALING_ORDER_TABLE')
OneViewDAG.LOAD_CREDENTIALING_PRODUCT_TABLE >> OneViewDAG.first('LOAD_CREDENTIALING_ORDER_TABLE')

OneViewDAG.LOAD_PHYSICIAN_TABLE >> OneViewDAG.REMOVE_UNKNOWN_HISTORICAL_RESIDENTS
OneViewDAG.EXTRACT_HISTORICAL_RESIDENT \
    >> OneViewDAG.CREATE_HISTORICAL_RESIDENT_TABLE \
    >> OneViewDAG.REMOVE_UNKNOWN_HISTORICAL_RESIDENTS \
    >> OneViewDAG.SPLIT_HISTORICAL_RESIDENT_TABLE

OneViewDAG.SPLIT_HISTORICAL_RESIDENT_TABLE >> OneViewDAG.first('LOAD_HISTORICAL_RESIDENT_TABLE')
OneViewDAG.LOAD_PHYSICIAN_TABLE >> OneViewDAG.first('LOAD_HISTORICAL_RESIDENT_TABLE')
OneViewDAG.sequence('LOAD_HISTORICAL_RESIDENT_TABLE')

OneViewDAG.CREATE_STATIC_REFERENCE_TABLE >> OneViewDAG.LOAD_STATIC_REFERENCE_TABLE

OneViewDAG.EXTRACT_CLASS_OF_TRADE >> OneViewDAG.CREATE_CLASS_OF_TRADE_TABLE \
    >> OneViewDAG.LOAD_CLASS_OF_TRADE_TABLE

OneViewDAG.EXTRACT_MEDICAL_SCHOOL >> OneViewDAG.CREATE_MEDICAL_SCHOOL_TABLE \
    >> OneViewDAG.LOAD_MEDICAL_SCHOOL_TABLE

OneViewDAG.EXTRACT_MEDICAL_LICENSES >> OneViewDAG.CLEAN_MEDICAL_LICENSES >> OneViewDAG.CREATE_MEDICAL_LICENSES_TABLE \
    >> OneViewDAG.LOAD_MEDICAL_LICENSES_TABLE
OneViewDAG.CONCATENATE_PHYSICIAN_TABLE >> OneViewDAG.CREATE_MEDICAL_LICENSES_TABLE
OneViewDAG.LOAD_PHYSICIAN_TABLE >> OneViewDAG.LOAD_MEDICAL_LICENSES_TABLE

### Save for AWS Batch implementation of refresh tasks ###
OneViewDAG.LOAD_PHYSICIAN_TABLE >> OneViewDAG.REFRESH_PHYSICIAN_VIEW
OneViewDAG.LOAD_PHYSICIAN_TABLE >> OneViewDAG.REINDEX_PHYSICIAN_VIEW
OneViewDAG.LOAD_TYPE_OF_PRACTICE_TABLE >> OneViewDAG.REFRESH_PHYSICIAN_VIEW
OneViewDAG.LOAD_PRESENT_EMPLOYMENT_TABLE >> OneViewDAG.REFRESH_PHYSICIAN_VIEW
OneViewDAG.LOAD_MAJOR_PROFESSIONAL_ACTIVITY_TABLE >> OneViewDAG.REFRESH_PHYSICIAN_VIEW
OneViewDAG.fan_in('LOAD_IQVIA_PROVIDER_AFFILIATION_TABLE', 'REFRESH_PHYSICIAN_VIEW')
OneViewDAG.fan_in('LOAD_BUSINESS_TABLE', 'REFRESH_PHYSICIAN_VIEW')
OneViewDAG.LOAD_SPECIALTY_TABLE >> OneViewDAG.REFRESH_PHYSICIAN_VIEW
OneViewDAG.LOAD_CORE_BASED_STATISTICAL_AREA_TABLE >> OneViewDAG.REFRESH_PHYSICIAN_VIEW
OneViewDAG.LOAD_LINKING_TABLES >> OneViewDAG.REFRESH_PHYSICIAN_VIEW
OneViewDAG.LOAD_ZIP_CODE_TABLE >> OneViewDAG.REFRESH_PHYSICIAN_VIEW
OneViewDAG.LOAD_METROPOLITAN_STATISTICAL_AREA_TABLE >> OneViewDAG.REFRESH_PHYSICIAN_VIEW
OneViewDAG.LOAD_MEDICAL_SCHOOL_TABLE >> OneViewDAG.REFRESH_PHYSICIAN_VIEW
OneViewDAG.REFRESH_PHYSICIAN_VIEW >> OneViewDAG.REINDEX_PHYSICIAN_VIEW

OneViewDAG.LOAD_PHYSICIAN_TABLE >> OneViewDAG.REFRESH_PROVIDER_VIEW
OneViewDAG.LOAD_PHYSICIAN_TABLE >> OneViewDAG.REINDEX_PROVIDER_VIEW
OneViewDAG.LOAD_TYPE_OF_PRACTICE_TABLE >> OneViewDAG.REFRESH_PROVIDER_VIEW
OneViewDAG.LOAD_PRESENT_EMPLOYMENT_TABLE >> OneViewDAG.REFRESH_PROVIDER_VIEW
OneViewDAG.LOAD_MAJOR_PROFESSIONAL_ACTIVITY_TABLE >> OneViewDAG.REFRESH_PROVIDER_VIEW
OneViewDAG.fan_in('LOAD_IQVIA_PROVIDER_AFFILIATION_TABLE', 'REFRESH_PROVIDER_VIEW')
OneViewDAG.fan_in('LOAD_BUSINESS_TABLE', 'REFRESH_PROVIDER_VIEW')
OneViewDAG.fan_in('LOAD_IQVIA_PROVIDER_TABLE', 'REFRESH_PROVIDER_VIEW')
OneViewDAG.LOAD_SPECIALTY_TABLE >> OneViewDAG.REFRESH_PROVIDER_VIEW
OneViewDAG.LOAD_CORE_BASED_STATISTICAL_AREA_TABLE >> OneViewDAG.REFRESH_PROVIDER_VIEW
OneViewDAG.LOAD_LINKING_TABLES >> OneViewDAG.REFRESH_PROVIDER_VIEW
OneViewDAG.LOAD_ZIP_CODE_TABLE >> OneViewDAG.REFRESH_PROVIDER_VIEW
OneViewDAG.LOAD_METROPOLITAN_STATISTICAL_AREA_TABLE >> OneViewDAG.REFRESH_PROVIDER_VIEW
OneViewDAG.LOAD_MEDICAL_SCHOOL_TABLE >> OneViewDAG.REFRESH_PROVIDER_VIEW
OneViewDAG.REFRESH_PROVIDER_VIEW >> OneViewDAG.REINDEX_PROVIDER_VIEW
