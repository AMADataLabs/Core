""" SQLAlchemy models for restricted OneView views """
from   alembic_utils.pg_view import PGView

SCHEMA = 'oneview'


PHYSICIAN_DATA_VIEW = PGView(
    schema=SCHEMA,
    signature='physician_data',
    definition=f'''
SELECT
p.medical_education_number As medical_education_number,
p.address_type As address_type,
p.mailing_name As mailing_name,
p.last_name As last_name,
p.first_name As first_name,
p.middle_name As middle_name,
p.name_suffix As name_suffix,
p.preferred_address_2 As preferred_address_2,
p.preferred_address_1 As preferred_address_1,
p.city As city,
p.state As state,
p.zipcode As zipcode,
p.sector As sector,
p.carrier_route As carrier_route,
p.address_undeliverable As address_undeliverable,
p.federal_information_processing_standard_county As federal_information_processing_standard_county,
p.federal_information_processing_standard_state As federal_information_processing_standard_state,
p.printer_control_code_begin As printer_control_code_begin,
p.barcode_zipcode As barcode_zipcode,
p.barcode_zipcode_plus_4 As barcode_zipcode_plus_4,
p.delivery_point As delivery_point,
p.check_digit As check_digit,
p.printer_control_code_end As printer_control_code_end,
p.metropolitan_statistical_area_population As metropolitan_statistical_area_population,
p.micro_metro_indicator As micro_metro_indicator,
p.core_based_statistical_area As core_based_statistical_area,
p.core_based_statistical_area_division As core_based_statistical_area_division,
p.degree_type As degree_type,
p.birth_year As birth_year,
p.birth_city As birth_city,
p.birth_state As birth_state,
p.birth_country As birth_country,
p.gender As gender,
p.telephone_number As telephone_number,
p.presumed_dead As presumed_dead,
p.fax_number As fax_number,
p.type_of_practice As type_of_practice,
p.present_employment As present_employment,
p.primary_specialty As primary_specialty,
p.secondary_specialty As secondary_specialty,
p.major_professional_activity As major_professional_activity,
p.physician_recognition_award_recipient As physician_recognition_award_recipient,
p.physician_recognition_award_expiration_date As physician_recognition_award_expiration_date,
p.graduate_medical_education_confirm As graduate_medical_education_confirm,
p.from_date As from_date,
p.end_date As end_date,
p.year_in_program As year_in_program,
p.post_graduate_year As post_graduate_year,
p.graduate_medical_education_primary_specialty As graduate_medical_education_primary_specialty,
p.graduate_medical_education_secondary_specialty As graduate_medical_education_secondary_specialty,
p.training_type As training_type,
p.graduate_medical_education_hospital_state As graduate_medical_education_hospital_state,
p.graduate_medical_education_hospital As graduate_medical_education_hospital,
p.medical_school_state As medical_school_state,
p.medical_school As medical_school,
p.medical_school_graduation_year As medical_school_graduation_year,
p.no_contact_type As no_contact_type,
p.no_web As no_web,
p.physician_data_restriction_program As physician_data_restriction_program,
p.physician_data_restriction_program_date As physician_data_restriction_program_date,
p.polo_address_2 As polo_address_2,
p.polo_address_1 As polo_address_1,
p.polo_city As polo_city,
p.polo_state As polo_state,
p.polo_zipcode As polo_zipcode,
p.polo_sector As polo_sector,
p.polo_carrier_route As polo_carrier_route,
p.most_recent_former_last_name As most_recent_former_last_name,
p.most_recent_former_middle_name As most_recent_former_middle_name,
p.most_recent_former_first_name As most_recent_former_first_name,
p.next_most_recent_former_last_name As next_most_recent_former_last_name,
p.next_most_recent_former_middle_name As next_most_recent_former_middle_name,
p.next_most_recent_former_first_name As next_most_recent_former_first_name,
p.national_provider_identifier As national_provider_identifier,
p.party_id As party_id,
p.entity_id As entity_id,
p.census_block_group As census_block_group,
p.census_division As census_division,
p.census_group As census_group,
p.census_region As census_region,
p.census_suffix As census_suffix,
p.census_tract As census_tract,
p.type As type,
p.membership_status As membership_status,
p.has_email As has_email,
p.no_release As no_release
FROM {SCHEMA}.physician as p;
'''
)
