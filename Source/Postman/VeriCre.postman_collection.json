{
	"info": {
		"_postman_id": "d3d906bb-abab-426b-b399-8b7cd9f2e5f4",
		"name": "VeriCre",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "7392489"
	},
	"item": [
		{
			"name": "Portal Authentication",
			"item": [
				{
					"name": "Get Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"\r",
									"console.log(jsonData.access_token);\r",
									"pm.globals.set('token', jsonData.access_token);\r",
									"console.log(pm.globals.get('token'));\r",
									"pm.globals.set('responses', new Map())\r",
									"\r",
									"\r",
									"pm.test(\"Response code indicates success\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var consumer_token = pm.environment.get('PORTAL_CONSUMER_KEY') + ':' + pm.environment.get('PORTAL_CONSUMER_SECRET');\r",
									"var encoded_consumer_token = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(consumer_token))\r",
									"console.log(encoded_consumer_token)\r",
									"\r",
									"pm.globals.set('consumer_token', encoded_consumer_token);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "Basic {{consumer_token}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "grant_type",
									"value": "client_credentials",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{PORTAL_TOKEN_URL}}",
							"host": [
								"{{PORTAL_TOKEN_URL}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Profiles",
			"item": [
				{
					"name": "Physician Search (NPI Number)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response code indicates success\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"Response is an array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(Array.isArray(jsonData)).to.eql(true);",
									"});",
									"",
									"",
									"pm.test(\"Response contains correct fields\", function () {",
									"    var jsonData = pm.response.json();",
									"",
									"    jsonData.forEach(function(record) {",
									"        pm.expect(\"entity_id\" in record).to.eql(true)",
									"        pm.expect(\"first_name\" in record).to.eql(true)",
									"        pm.expect(\"last_name\" in record).to.eql(true)",
									"        pm.expect(\"date_of_birth\" in record).to.eql(true)",
									"        pm.expect(Object.keys(record).length).to.eql(4)",
									"    });",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"host": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Host",
								"value": "{{VERICRE_API_HOST_HEADER}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "\n{\n    \"npi_number\": \"123456021\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{VERICRE_API_URL}}/physicians/search",
							"host": [
								"{{VERICRE_API_URL}}"
							],
							"path": [
								"physicians",
								"search"
							]
						}
					},
					"response": []
				},
				{
					"name": "Physician Search (ME Number)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response code indicates success\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"Response is an array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(Array.isArray(jsonData)).to.eql(true);",
									"});",
									"",
									"",
									"pm.test(\"Response contains correct fields\", function () {",
									"    var jsonData = pm.response.json();",
									"",
									"    jsonData.forEach(function(record) {",
									"        pm.expect(\"entity_id\" in record).to.eql(true)",
									"        pm.expect(\"first_name\" in record).to.eql(true)",
									"        pm.expect(\"last_name\" in record).to.eql(true)",
									"        pm.expect(\"date_of_birth\" in record).to.eql(true)",
									"        pm.expect(Object.keys(record).length).to.eql(4)",
									"    });",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"host": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Host",
								"value": "{{VERICRE_API_HOST_HEADER}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"me_number\": \"70100000000\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{VERICRE_API_URL}}/physicians/search",
							"host": [
								"{{VERICRE_API_URL}}"
							],
							"path": [
								"physicians",
								"search"
							]
						}
					},
					"response": []
				},
				{
					"name": "Physician Search (ECFMG Number)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response code indicates success\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"Response is an array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(Array.isArray(jsonData)).to.eql(true);",
									"});",
									"",
									"",
									"pm.test(\"Response contains correct fields\", function () {",
									"    var jsonData = pm.response.json();",
									"",
									"    jsonData.forEach(function(record) {",
									"        pm.expect(\"entity_id\" in record).to.eql(true)",
									"        pm.expect(\"first_name\" in record).to.eql(true)",
									"        pm.expect(\"last_name\" in record).to.eql(true)",
									"        pm.expect(\"date_of_birth\" in record).to.eql(true)",
									"        pm.expect(Object.keys(record).length).to.eql(4)",
									"    });",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"host": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Host",
								"value": "{{VERICRE_API_HOST_HEADER}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"ecfmg_number\": \"00123422\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{VERICRE_API_URL}}/physicians/search",
							"host": [
								"{{VERICRE_API_URL}}"
							],
							"path": [
								"physicians",
								"search"
							]
						}
					},
					"response": []
				},
				{
					"name": "Physician Search (Name/Birth Date)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response code indicates success\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"Response is an array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(Array.isArray(jsonData)).to.eql(true);",
									"});",
									"",
									"",
									"pm.test(\"Response contains correct fields\", function () {",
									"    var jsonData = pm.response.json();",
									"",
									"    jsonData.forEach(function(record) {",
									"        pm.expect(\"entity_id\" in record).to.eql(true)",
									"        pm.expect(\"first_name\" in record).to.eql(true)",
									"        pm.expect(\"last_name\" in record).to.eql(true)",
									"        pm.expect(\"date_of_birth\" in record).to.eql(true)",
									"        pm.expect(Object.keys(record).length).to.eql(4)",
									"    });",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"host": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Host",
								"value": "{{VERICRE_API_HOST_HEADER}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "\n    {\n    \"last_name\":\"Barry\",\n    \"first_name\":\"Rabin\",\n    \"date_of_birth\":\"1942-10-01\"\n    }\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{VERICRE_API_URL}}/physicians/search",
							"host": [
								"{{VERICRE_API_URL}}"
							],
							"path": [
								"physicians",
								"search"
							]
						}
					},
					"response": []
				},
				{
					"name": "Lookup Single Profile",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response code indicates success\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"Response is a single dict\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(Array.isArray(jsonData)).to.eql(false);",
									"});",
									"",
									"",
									"pm.test(\"Response contains correct fields\", function () {",
									"    var jsonData = pm.response.json();",
									"",
									"    pm.expect(\"profiles\" in jsonData).to.eql(true)",
									"});",
									"",
									"",
									"pm.test(\"Response contains correct number of profiles\", function () {",
									"    var profiles = pm.response.json()[\"profiles\"];",
									"",
									"    pm.expect(Object.keys(profiles).length).to.eql(1)",
									"});",
									"",
									"",
									"pm.test(\"Profiles contain correct fields\", function () {",
									"    var profiles = pm.response.json()[\"profiles\"];",
									"",
									"    profiles.forEach(function(record) {",
									"        pm.expect(\"entity_id\" in record).to.eql(true)",
									"        pm.expect(\"demographics\" in record).to.eql(true)",
									"        pm.expect(\"ecfmg\" in record).to.eql(true)",
									"        pm.expect(\"medical_schools\" in record).to.eql(true)",
									"        pm.expect(\"medical_training\" in record).to.eql(true)",
									"        pm.expect(\"licenses\" in record).to.eql(true)",
									"        pm.expect(\"sanctions\" in record).to.eql(true)",
									"        pm.expect(\"dea\" in record).to.eql(true)",
									"        pm.expect(\"abms\" in record).to.eql(true)",
									"        pm.expect(\"claim\" in record).to.eql(true)",
									"        pm.expect(\"provider_cds\" in record).to.eql(true)",
									"        pm.expect(\"work_history\" in record).to.eql(true)",
									"        pm.expect(\"insurance\" in record).to.eql(true)",
									"        pm.expect(Object.keys(record).length).to.eql(13)",
									"    });",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"host": true
						}
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Host",
								"value": "{{VERICRE_API_HOST_HEADER}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{VERICRE_API_URL}}/profile/3381907",
							"host": [
								"{{VERICRE_API_URL}}"
							],
							"path": [
								"profile",
								"3381907"
							]
						}
					},
					"response": []
				},
				{
					"name": "Lookup Multiple Profiles",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response code indicates success\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"Response is a single dict\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(Array.isArray(jsonData)).to.eql(false);",
									"});",
									"",
									"",
									"pm.test(\"Response contains correct fields\", function () {",
									"    var jsonData = pm.response.json();",
									"",
									"    pm.expect(\"profiles\" in jsonData).to.eql(true)",
									"});",
									"",
									"",
									"pm.test(\"Response contains correct number of profiles\", function () {",
									"    var profiles = pm.response.json()[\"profiles\"];",
									"",
									"    pm.expect(Object.keys(profiles).length).to.eql(3)",
									"});",
									"",
									"",
									"pm.test(\"Profiles contain correct fields\", function () {",
									"    var profiles = pm.response.json()[\"profiles\"];",
									"",
									"    profiles.forEach(function(record) {",
									"        pm.expect(\"entity_id\" in record).to.eql(true)",
									"        pm.expect(\"demographics\" in record).to.eql(true)",
									"        pm.expect(\"ecfmg\" in record).to.eql(true)",
									"        pm.expect(\"medical_schools\" in record).to.eql(true)",
									"        pm.expect(\"medical_training\" in record).to.eql(true)",
									"        pm.expect(\"licenses\" in record).to.eql(true)",
									"        pm.expect(\"sanctions\" in record).to.eql(true)",
									"        pm.expect(\"dea\" in record).to.eql(true)",
									"        pm.expect(\"abms\" in record).to.eql(true)",
									"        pm.expect(\"claim\" in record).to.eql(true)",
									"        pm.expect(\"provider_cds\" in record).to.eql(true)",
									"        pm.expect(\"work_history\" in record).to.eql(true)",
									"        pm.expect(\"insurance\" in record).to.eql(true)",
									"        pm.expect(Object.keys(record).length).to.eql(13)",
									"    });",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"host": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Host",
								"value": "{{VERICRE_API_HOST_HEADER}}",
								"description": "DEV",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"entity_id\":[\"3381907\"]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{VERICRE_API_URL}}/profiles/lookup",
							"host": [
								"{{VERICRE_API_URL}}"
							],
							"path": [
								"profiles",
								"lookup"
							]
						}
					},
					"response": []
				},
				{
					"name": "Download AMA PDF",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response code indicates success\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"host": true
						}
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Host",
								"value": "{{VERICRE_API_HOST_HEADER}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{VERICRE_API_URL}}/profile/5457448/AMA/pdf",
							"host": [
								"{{VERICRE_API_URL}}"
							],
							"path": [
								"profile",
								"5457448",
								"AMA",
								"pdf"
							]
						}
					},
					"response": []
				},
				{
					"name": "Download CAQH PDF",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response code indicates success\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"host": true
						}
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Host",
								"value": "{{VERICRE_API_HOST_HEADER}}",
								"type": "default"
							}
						],
						"url": {
							"raw": "{{VERICRE_API_URL}}/profile/3381907/CAQH/pdf",
							"host": [
								"{{VERICRE_API_URL}}"
							],
							"path": [
								"profile",
								"3381907",
								"CAQH",
								"pdf"
							]
						}
					},
					"response": []
				},
				{
					"name": "Download VeriCre Physician's Uploaded Documents",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response code indicates success\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"host": true
						}
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Host",
								"value": "{{VERICRE_API_HOST_HEADER}}",
								"type": "default"
							}
						],
						"url": {
							"raw": "{{VERICRE_API_URL}}/profile/3381907/documents",
							"host": [
								"{{VERICRE_API_URL}}"
							],
							"path": [
								"profile",
								"3381907",
								"documents"
							]
						}
					},
					"response": []
				}
			],
			"description": "run [Get Token] before function endpoints",
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{token}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		}
	]
}