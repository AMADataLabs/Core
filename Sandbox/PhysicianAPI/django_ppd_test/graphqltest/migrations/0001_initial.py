# Generated by Django 2.2.7 on 2019-11-08 16:23

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codename', models.CharField(max_length=100)),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.BooleanField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=30)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.BooleanField()),
                ('is_active', models.BooleanField()),
                ('date_joined', models.DateTimeField()),
                ('last_name', models.CharField(max_length=150)),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('change_message', models.TextField()),
                ('action_flag', models.PositiveSmallIntegerField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoTest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('me', models.TextField(blank=True, db_column='ME', null=True)),
                ('record_id', models.TextField(blank=True, db_column='RECORD_ID', null=True)),
                ('update_type', models.TextField(blank=True, db_column='UPDATE_TYPE', null=True)),
                ('address_type', models.TextField(blank=True, db_column='ADDRESS_TYPE', null=True)),
                ('mailing_name', models.TextField(blank=True, db_column='MAILING_NAME', null=True)),
                ('last_name', models.TextField(blank=True, db_column='LAST_NAME', null=True)),
                ('first_name', models.TextField(blank=True, db_column='FIRST_NAME', null=True)),
                ('middle_name', models.TextField(blank=True, db_column='MIDDLE_NAME', null=True)),
                ('suffix', models.TextField(blank=True, db_column='SUFFIX', null=True)),
                ('mailing_line_1', models.TextField(blank=True, db_column='MAILING_LINE_1', null=True)),
                ('mailing_line_2', models.TextField(blank=True, db_column='MAILING_LINE_2', null=True)),
                ('city', models.TextField(blank=True, db_column='CITY', null=True)),
                ('state', models.TextField(blank=True, db_column='STATE', null=True)),
                ('zip', models.TextField(blank=True, db_column='ZIP', null=True)),
                ('sector', models.TextField(blank=True, db_column='SECTOR', null=True)),
                ('carrier_route', models.TextField(blank=True, db_column='CARRIER_ROUTE', null=True)),
                ('address_undeliverable_flag', models.TextField(blank=True, db_column='ADDRESS_UNDELIVERABLE_FLAG', null=True)),
                ('fips_county', models.TextField(blank=True, db_column='FIPS_COUNTY', null=True)),
                ('fips_state', models.TextField(blank=True, db_column='FIPS_STATE', null=True)),
                ('printer_control_code', models.TextField(blank=True, db_column='PRINTER_CONTROL_CODE', null=True)),
                ('pc_zip', models.TextField(blank=True, db_column='PC_ZIP', null=True)),
                ('pc_sector', models.TextField(blank=True, db_column='PC_SECTOR', null=True)),
                ('delivery_point_code', models.TextField(blank=True, db_column='DELIVERY_POINT_CODE', null=True)),
                ('check_digit', models.TextField(blank=True, db_column='CHECK_DIGIT', null=True)),
                ('printer_control_code_2', models.TextField(blank=True, db_column='PRINTER_CONTROL_CODE_2', null=True)),
                ('region', models.TextField(blank=True, db_column='REGION', null=True)),
                ('division', models.TextField(blank=True, db_column='DIVISION', null=True)),
                ('group', models.TextField(blank=True, db_column='GROUP', null=True)),
                ('tract', models.TextField(blank=True, db_column='TRACT', null=True)),
                ('suffix_census', models.TextField(blank=True, db_column='SUFFIX_CENSUS', null=True)),
                ('block_group', models.TextField(blank=True, db_column='BLOCK_GROUP', null=True)),
                ('msa_population_size', models.TextField(blank=True, db_column='MSA_POPULATION_SIZE', null=True)),
                ('micro_metro_ind', models.TextField(blank=True, db_column='MICRO_METRO_IND', null=True)),
                ('cbsa', models.TextField(blank=True, db_column='CBSA', null=True)),
                ('cbsa_div_ind', models.TextField(blank=True, db_column='CBSA_DIV_IND', null=True)),
                ('md_do_code', models.TextField(blank=True, db_column='MD_DO_CODE', null=True)),
                ('birth_year', models.TextField(blank=True, db_column='BIRTH_YEAR', null=True)),
                ('birth_city', models.TextField(blank=True, db_column='BIRTH_CITY', null=True)),
                ('birth_state', models.TextField(blank=True, db_column='BIRTH_STATE', null=True)),
                ('birth_country', models.TextField(blank=True, db_column='BIRTH_COUNTRY', null=True)),
                ('gender', models.TextField(blank=True, db_column='GENDER', null=True)),
                ('telephone_number', models.TextField(blank=True, db_column='TELEPHONE_NUMBER', null=True)),
                ('presumed_dead_flag', models.TextField(blank=True, db_column='PRESUMED_DEAD_FLAG', null=True)),
                ('fax_number', models.TextField(blank=True, db_column='FAX_NUMBER', null=True)),
                ('top_cd', models.TextField(blank=True, db_column='TOP_CD', null=True)),
                ('pe_cd', models.TextField(blank=True, db_column='PE_CD', null=True)),
                ('prim_spec_cd', models.TextField(blank=True, db_column='PRIM_SPEC_CD', null=True)),
                ('sec_spec_cd', models.TextField(blank=True, db_column='SEC_SPEC_CD', null=True)),
                ('mpa_cd', models.TextField(blank=True, db_column='MPA_CD', null=True)),
                ('pra_recipient', models.TextField(blank=True, db_column='PRA_RECIPIENT', null=True)),
                ('pra_exp_dt', models.TextField(blank=True, db_column='PRA_EXP_DT', null=True)),
                ('gme_conf_flg', models.TextField(blank=True, db_column='GME_CONF_FLG', null=True)),
                ('from_dt', models.TextField(blank=True, db_column='FROM_DT', null=True)),
                ('to_dt', models.TextField(blank=True, db_column='TO_DT', null=True)),
                ('year_in_program', models.TextField(blank=True, db_column='YEAR_IN_PROGRAM', null=True)),
                ('post_graduate_year', models.TextField(blank=True, db_column='POST_GRADUATE_YEAR', null=True)),
                ('gme_spec_1', models.TextField(blank=True, db_column='GME_SPEC_1', null=True)),
                ('gme_spec_2', models.TextField(blank=True, db_column='GME_SPEC_2', null=True)),
                ('training_type', models.TextField(blank=True, db_column='TRAINING_TYPE', null=True)),
                ('gme_inst_state', models.TextField(blank=True, db_column='GME_INST_STATE', null=True)),
                ('gme_inst_id', models.TextField(blank=True, db_column='GME_INST_ID', null=True)),
                ('medschool_state', models.TextField(blank=True, db_column='MEDSCHOOL_STATE', null=True)),
                ('medschool_id', models.TextField(blank=True, db_column='MEDSCHOOL_ID', null=True)),
                ('medschool_grad_year', models.TextField(blank=True, db_column='MEDSCHOOL_GRAD_YEAR', null=True)),
                ('no_contact_ind', models.TextField(blank=True, db_column='NO_CONTACT_IND', null=True)),
                ('no_web_flag', models.TextField(blank=True, db_column='NO_WEB_FLAG', null=True)),
                ('pdrp_flag', models.TextField(blank=True, db_column='PDRP_FLAG', null=True)),
                ('pdrp_start_dt', models.TextField(blank=True, db_column='PDRP_START_DT', null=True)),
                ('polo_mailing_line_1', models.TextField(blank=True, db_column='POLO_MAILING_LINE_1', null=True)),
                ('polo_mailing_line_2', models.TextField(blank=True, db_column='POLO_MAILING_LINE_2', null=True)),
                ('polo_city', models.TextField(blank=True, db_column='POLO_CITY', null=True)),
                ('polo_state', models.TextField(blank=True, db_column='POLO_STATE', null=True)),
                ('polo_zip', models.TextField(blank=True, db_column='POLO_ZIP', null=True)),
                ('polo_sector', models.TextField(blank=True, db_column='POLO_SECTOR', null=True)),
                ('polo_carrier_route', models.TextField(blank=True, db_column='POLO_CARRIER_ROUTE', null=True)),
                ('most_recent_former_last_name', models.TextField(blank=True, db_column='MOST_RECENT_FORMER_LAST_NAME', null=True)),
                ('most_recent_former_middle_name', models.TextField(blank=True, db_column='MOST_RECENT_FORMER_MIDDLE_NAME', null=True)),
                ('most_recent_former_first_name', models.TextField(blank=True, db_column='MOST_RECENT_FORMER_FIRST_NAME', null=True)),
                ('next_most_recent_former_last', models.TextField(blank=True, db_column='NEXT_MOST_RECENT_FORMER_LAST', null=True)),
                ('next_most_recent_former_middle', models.TextField(blank=True, db_column='NEXT_MOST_RECENT_FORMER_MIDDLE', null=True)),
                ('next_most_recent_former_first', models.TextField(blank=True, db_column='NEXT_MOST_RECENT_FORMER_FIRST', null=True)),
            ],
            options={
                'db_table': 'django_test',
                'managed': False,
            },
        ),
    ]
